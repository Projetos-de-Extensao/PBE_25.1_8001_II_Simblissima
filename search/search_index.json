{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"Projeto Simblissima","text":"<p>N\u00famero do Grupo: 2 C\u00f3digo da Disciplina: IBM-8936</p>"},{"location":"#alunos","title":"Alunos","text":"Matr\u00edcula Aluno Bernardo Lobo Marques 202401709433 Bernardo Moreira Guimara\u0303es Gonc\u0327alves 202401500283 Guilherme Dias Batista 202402972091 Michel de Melo Guimara\u0303es 202401569852 Julia Dominguez Curto 202402192477"},{"location":"#sobre","title":"Sobre","text":"<p>O projeto Simblissima \u00e9 uma API REST com interface Single Page Application (SPA) para gerenciamento de pedidos e entregas entre o continente e a Ilha Primeira. O sistema permite que moradores da ilha criem pedidos de produtos, acompanhem o status em tempo real, e facilita a gest\u00e3o log\u00edstica atrav\u00e9s de um dashboard administrativo.</p>"},{"location":"#principais-funcionalidades","title":"Principais Funcionalidades:","text":"<ul> <li>Para Clientes: Cadastro, login, cria\u00e7\u00e3o de pedidos, acompanhamento de status, confirma\u00e7\u00e3o de valores</li> <li>Para Gerentes: Dashboard de gest\u00e3o, atualiza\u00e7\u00e3o de status, defini\u00e7\u00e3o de valores finais, filtros e estat\u00edsticas</li> <li>Sistema: API REST, autentica\u00e7\u00e3o por sess\u00e3o, hist\u00f3rico de status, valida\u00e7\u00f5es de dados</li> </ul>"},{"location":"#screenshots","title":"Screenshots","text":"<p> Tela de Login do Sistema</p> <p> Dashboard do Gerente</p> <p> P\u00e1gina inicial do Cliente</p>"},{"location":"#instalacao","title":"Instala\u00e7\u00e3o","text":"<p>Linguagens: Python 3.12+ Tecnologias: Django, Django REST Framework, SQLite, Bootstrap, JavaScript</p>"},{"location":"#pre-requisitos","title":"Pr\u00e9-requisitos:","text":"<ul> <li>Python 3.12 ou superior</li> <li>pip (gerenciador de pacotes Python)</li> </ul>"},{"location":"#comandos-de-instalacao","title":"Comandos de instala\u00e7\u00e3o:","text":"<pre><code># Clone o reposit\u00f3rio\ngit clone &lt;url-do-repositorio&gt;\ncd PBE_25.1_8001_II_Simblissima\n\n# Instale as depend\u00eancias\npip install -r requirements.txt\n\n# Execute as migra\u00e7\u00f5es\npython manage.py migrate\n\n# Crie um superusu\u00e1rio (opcional)\npython manage.py createsuperuser\n\n# Execute o servidor\npython manage.py runserver\n</code></pre>"},{"location":"#uso","title":"Uso","text":"<p>Ap\u00f3s executar o servidor com <code>python manage.py runserver</code>, acesse:</p> <ul> <li>Interface Principal: http://localhost:8000/</li> <li>API REST: http://localhost:8000/api/</li> <li>Admin Django: http://localhost:8000/admin/ (necess\u00e1rio superusu\u00e1rio)</li> </ul>"},{"location":"#fluxo-de-uso","title":"Fluxo de uso:","text":"<ol> <li>Cliente: Acesse a p\u00e1gina inicial, registre-se ou fa\u00e7a login</li> <li>Criar Pedido: Use a op\u00e7\u00e3o \"Novo Pedido\" para adicionar itens</li> <li>Acompanhar: Visualize seus pedidos e status na \u00e1rea \"Meus Pedidos\"</li> <li>Gerente: Use login de staff para acessar o dashboard de gest\u00e3o</li> </ol>"},{"location":"#video","title":"V\u00eddeo","text":"<p>Adicione 1 ou mais v\u00eddeos com a execu\u00e7\u00e3o do projeto final.</p>"},{"location":"#outros","title":"Outros","text":"<p>Quaisquer outras informa\u00e7\u00f5es sobre seu projeto podem ser descritas abaixo.</p>"},{"location":"assets/Cronograma/cronograma_resumido/","title":"\ud83d\udcc5 Cronograma Simples - Projeto Simblissima","text":""},{"location":"assets/Cronograma/cronograma_resumido/#resumo-executivo","title":"Resumo Executivo","text":"<p>Per\u00edodo: Fevereiro 2025 - Junho 2025 Progresso Atual: 75% Conclu\u00eddo Pr\u00f3xima Entrega: 21/06/2025  </p>"},{"location":"assets/Cronograma/cronograma_resumido/#fase-1-iniciacao-100-concluido","title":"\ud83d\ude80 FASE 1: INICIA\u00c7\u00c3O (\u2705 100% Conclu\u00eddo)","text":"<p>Per\u00edodo: 05/02/2025 - 12/04/2025</p> Semana Atividade Respons\u00e1vel Status 1-2 Defini\u00e7\u00e3o do tema e brainstorming Toda equipe \u2705 3 Documento de Vis\u00e3o Guilherme Dias \u2705 4 5W2H Toda equipe \u2705 5 Mapa Mental Bernardo Lobo \u2705 6 Entrevistas Michel de Melo \u2705 7 Prot\u00f3tipo Alta Fidelidade Julia Curto \u2705 8 Metodologia Bernardo Moreira \u2705 9-10 Consolida\u00e7\u00e3o e entrega Toda equipe \u2705"},{"location":"assets/Cronograma/cronograma_resumido/#fase-2-elaboracao-100-concluido","title":"\ud83c\udfaf FASE 2: ELABORA\u00c7\u00c3O (\u2705 100% Conclu\u00eddo)","text":"<p>Per\u00edodo: 13/04/2025 - 10/05/2025</p> Semana Atividade Respons\u00e1vel Status 11 Diagrama Casos de Uso Bernardo Lobo \u2705 12 Diagrama de Classes Guilherme Dias \u2705 13 Documento Arquitetura (DAS) Julia Curto \u2705 14 Refinamento e documenta\u00e7\u00e3o Toda equipe \u2705"},{"location":"assets/Cronograma/cronograma_resumido/#fase-3-construcao-85-concluido","title":"\ud83d\udd28 FASE 3: CONSTRU\u00c7\u00c3O (\ud83d\udd04 85% Conclu\u00eddo)","text":"<p>Per\u00edodo: 11/05/2025 - 31/05/2025</p> Semana Atividade Respons\u00e1vel Status 15 Configura\u00e7\u00e3o Django Michel de Melo \u2705 16 Modelos de dados Bernardo Moreira \u2705 17 API REST (serializers/views) Guilherme Dias \u2705 18 Interface frontend (SPA) Julia Curto \u2705 19 Autentica\u00e7\u00e3o e permiss\u00f5es Bernardo Lobo \u2705 20 Dashboard do gerente Michel de Melo \ud83d\udd04 21 Integra\u00e7\u00e3o e testes Toda equipe \ud83d\udd04"},{"location":"assets/Cronograma/cronograma_resumido/#fase-4-transicao-planejado","title":"\ud83d\ude80 FASE 4: TRANSI\u00c7\u00c3O (\ud83d\udcc5 Planejado)","text":"<p>Per\u00edodo: 01/06/2025 - 15/06/2025</p> Semana Atividade Respons\u00e1vel Status 22 Testes e corre\u00e7\u00e3o de bugs Toda equipe \ud83d\udcc5 23 Documenta\u00e7\u00e3o final Bernardo Moreira \ud83d\udcc5 24 Prepara\u00e7\u00e3o da apresenta\u00e7\u00e3o Toda equipe \ud83d\udcc5 25 Entrega final Toda equipe \ud83d\udcc5"},{"location":"assets/Cronograma/cronograma_resumido/#entregas-principais","title":"\ud83d\udccb Entregas Principais","text":""},{"location":"assets/Cronograma/cronograma_resumido/#entrega-1-12042025-concluida","title":"\u2705 Entrega 1 (12/04/2025) - Conclu\u00edda","text":"<ul> <li>Documento de Vis\u00e3o, Brainstorming, Mapa Mental, 5W2H, Entrevistas, Prot\u00f3tipo</li> </ul>"},{"location":"assets/Cronograma/cronograma_resumido/#entrega-2-10052025-concluida","title":"\u2705 Entrega 2 (10/05/2025) - Conclu\u00edda","text":"<ul> <li>Diagrama de Casos de Uso, Diagrama de Classes, DAS</li> </ul>"},{"location":"assets/Cronograma/cronograma_resumido/#entrega-3-07062025-em-andamento","title":"\ud83d\udd04 Entrega 3 (07/06/2025) - Em andamento","text":"<ul> <li>API REST, Sistema de autentica\u00e7\u00e3o, Interface web, Dashboard</li> </ul>"},{"location":"assets/Cronograma/cronograma_resumido/#entrega-final-21062025-planejada","title":"\ud83d\udcc5 Entrega Final (21/06/2025) - Planejada","text":"<ul> <li>Sistema completo, Documenta\u00e7\u00e3o final, Apresenta\u00e7\u00e3o</li> </ul>"},{"location":"assets/Cronograma/cronograma_resumido/#tecnologias","title":"\ud83d\udee0\ufe0f Tecnologias","text":"<p>Backend: Python, Django, Django REST Framework Frontend: HTML5, CSS3, JavaScript, Bootstrap Banco: SQLite Docs: MkDocs, PlantUML  </p>"},{"location":"assets/Cronograma/cronograma_resumido/#equipe","title":"\ud83d\udc65 Equipe","text":"<ul> <li>Bernardo Lobo - An\u00e1lise de requisitos, autentica\u00e7\u00e3o</li> <li>Bernardo Moreira - Metodologia, modelos de dados  </li> <li>Guilherme Dias - Documento de vis\u00e3o, API REST</li> <li>Julia Curto - Prot\u00f3tipo, interface frontend</li> <li>Michel de Melo - Entrevistas, ambiente, dashboard</li> </ul> <p>Legenda: \u2705 Conclu\u00eddo | \ud83d\udd04 Em andamento | \ud83d\udcc5 Planejado</p> <p>\u00daltima atualiza\u00e7\u00e3o: 04/06/2025</p>"},{"location":"assets/Swagger/SWAGGER_IMPLEMENTATION_SUMMARY/","title":"Swagger API Documentation - Final Implementation","text":""},{"location":"assets/Swagger/SWAGGER_IMPLEMENTATION_SUMMARY/#status-completed-fully-functional","title":"Status: \u2705 COMPLETED &amp; FULLY FUNCTIONAL","text":"<p>The Swagger API documentation for the Simblissima Django REST Framework project has been successfully implemented, tested, and is now fully functional with all endpoints properly documented and accessible.</p>"},{"location":"assets/Swagger/SWAGGER_IMPLEMENTATION_SUMMARY/#summary-of-implementation","title":"Summary of Implementation","text":""},{"location":"assets/Swagger/SWAGGER_IMPLEMENTATION_SUMMARY/#1-dependencies-installation","title":"1. Dependencies &amp; Installation","text":"<ul> <li>\u2705 Added <code>drf-yasg&gt;=1.21.7</code> to requirements.txt</li> <li>\u2705 Successfully installed drf-yasg package</li> <li>\u2705 Added 'drf_yasg' to INSTALLED_APPS in settings.py</li> </ul>"},{"location":"assets/Swagger/SWAGGER_IMPLEMENTATION_SUMMARY/#2-swagger-configuration","title":"2. Swagger Configuration","text":"<ul> <li>\u2705 Added comprehensive Swagger settings in settings.py:</li> <li>SWAGGER_SETTINGS with authentication and UI customization</li> <li>REDOC_SETTINGS for ReDoc interface</li> <li>Proper API information (title, version, description, contact)</li> </ul>"},{"location":"assets/Swagger/SWAGGER_IMPLEMENTATION_SUMMARY/#3-url-configuration","title":"3. URL Configuration","text":"<ul> <li>\u2705 Updated main urls.py with schema view configuration</li> <li>\u2705 Added Swagger endpoints:</li> <li><code>/swagger/</code> - Swagger UI interface</li> <li><code>/redoc/</code> - ReDoc interface  </li> <li><code>/swagger.json</code> - JSON schema</li> <li><code>/swagger.yaml</code> - YAML schema</li> </ul>"},{"location":"assets/Swagger/SWAGGER_IMPLEMENTATION_SUMMARY/#4-api-documentation-coverage","title":"4. API Documentation Coverage","text":""},{"location":"assets/Swagger/SWAGGER_IMPLEMENTATION_SUMMARY/#viewsets-documentation","title":"ViewSets Documentation:","text":"<ul> <li>\u2705 ClienteViewSet: Complete docstring documentation</li> <li>\u2705 PedidoViewSet: </li> <li>Complete docstring with detailed functionality description</li> <li>@swagger_auto_schema for <code>add_item</code> action</li> <li>@swagger_auto_schema for <code>update_status</code> action</li> <li>@swagger_auto_schema for <code>confirmar_pagamento</code> action</li> <li>\u2705 ItemPedidoViewSet: Complete docstring documentation</li> <li>\u2705 StatusPedidoViewSet: Complete docstring documentation</li> </ul>"},{"location":"assets/Swagger/SWAGGER_IMPLEMENTATION_SUMMARY/#api-functions-documentation","title":"API Functions Documentation:","text":"<ul> <li>\u2705 register_user: @swagger_auto_schema with request/response schemas</li> <li>\u2705 current_user: @swagger_auto_schema with response documentation</li> <li>\u2705 api_login: @swagger_auto_schema with authentication details</li> <li>\u2705 perfil_cliente: @swagger_auto_schema for GET/PUT operations</li> </ul>"},{"location":"assets/Swagger/SWAGGER_IMPLEMENTATION_SUMMARY/#5-documented-endpoints","title":"5. Documented Endpoints","text":""},{"location":"assets/Swagger/SWAGGER_IMPLEMENTATION_SUMMARY/#authentication-user-management","title":"Authentication &amp; User Management:","text":"<ul> <li><code>POST /register/</code> - User registration</li> <li><code>POST /login/</code> - User login</li> <li><code>GET /current_user/</code> - Get current user info</li> <li><code>GET|PUT /perfil/</code> - View/update user profile</li> </ul>"},{"location":"assets/Swagger/SWAGGER_IMPLEMENTATION_SUMMARY/#client-management","title":"Client Management:","text":"<ul> <li><code>GET /clientes/</code> - List clients (staff only)</li> <li><code>GET /clientes/{id}/</code> - Get specific client</li> <li><code>PUT|PATCH /clientes/{id}/</code> - Update client</li> <li><code>DELETE /clientes/{id}/</code> - Delete client</li> </ul>"},{"location":"assets/Swagger/SWAGGER_IMPLEMENTATION_SUMMARY/#order-management","title":"Order Management:","text":"<ul> <li><code>GET /pedidos/</code> - List orders (filtered by user/all for staff)</li> <li><code>POST /pedidos/</code> - Create new order</li> <li><code>GET /pedidos/{id}/</code> - Get specific order</li> <li><code>PUT|PATCH /pedidos/{id}/</code> - Update order</li> <li><code>DELETE /pedidos/{id}/</code> - Delete order</li> <li><code>POST /pedidos/{id}/add_item/</code> - Add item to order</li> <li><code>POST /pedidos/{id}/update_status/</code> - Update order status</li> <li><code>POST /pedidos/{id}/confirmar_pagamento/</code> - Confirm payment method</li> </ul>"},{"location":"assets/Swagger/SWAGGER_IMPLEMENTATION_SUMMARY/#order-items-management","title":"Order Items Management:","text":"<ul> <li><code>GET /itens-pedido/</code> - List order items</li> <li><code>POST /itens-pedido/</code> - Create order item</li> <li><code>GET|PUT|PATCH|DELETE /itens-pedido/{id}/</code> - CRUD operations</li> </ul>"},{"location":"assets/Swagger/SWAGGER_IMPLEMENTATION_SUMMARY/#status-history-management","title":"Status History Management:","text":"<ul> <li><code>GET /status-pedido/</code> - List status history</li> <li><code>POST /status-pedido/</code> - Create status entry</li> <li><code>GET|PUT|PATCH|DELETE /status-pedido/{id}/</code> - CRUD operations</li> </ul>"},{"location":"assets/Swagger/SWAGGER_IMPLEMENTATION_SUMMARY/#6-features-implemented","title":"6. Features Implemented","text":""},{"location":"assets/Swagger/SWAGGER_IMPLEMENTATION_SUMMARY/#requestresponse-schemas","title":"Request/Response Schemas:","text":"<ul> <li>Detailed input parameter documentation</li> <li>Response format specifications</li> <li>Error response documentation</li> <li>Required field validation</li> </ul>"},{"location":"assets/Swagger/SWAGGER_IMPLEMENTATION_SUMMARY/#authentication-documentation","title":"Authentication Documentation:","text":"<ul> <li>Session-based authentication details</li> <li>Permission requirements (IsOwnerOrStaff)</li> <li>Access control documentation</li> </ul>"},{"location":"assets/Swagger/SWAGGER_IMPLEMENTATION_SUMMARY/#business-logic-documentation","title":"Business Logic Documentation:","text":"<ul> <li>Order creation workflow</li> <li>Status update process</li> <li>Payment confirmation flow</li> <li>Value calculation logic</li> </ul>"},{"location":"assets/Swagger/SWAGGER_IMPLEMENTATION_SUMMARY/#7-technical-quality","title":"7. Technical Quality","text":""},{"location":"assets/Swagger/SWAGGER_IMPLEMENTATION_SUMMARY/#code-quality","title":"Code Quality:","text":"<ul> <li>\u2705 Fixed all syntax errors</li> <li>\u2705 Proper indentation and formatting</li> <li>\u2705 Consistent documentation style</li> <li>\u2705 Error handling documented</li> </ul>"},{"location":"assets/Swagger/SWAGGER_IMPLEMENTATION_SUMMARY/#server-status","title":"Server Status:","text":"<ul> <li>\u2705 Django server running successfully on http://127.0.0.1:8000/</li> <li>\u2705 Swagger UI accessible at http://127.0.0.1:8000/swagger/</li> <li>\u2705 ReDoc interface accessible at http://127.0.0.1:8000/redoc/</li> <li>\u2705 JSON schema available at http://127.0.0.1:8000/swagger.json</li> <li>\u2705 YAML schema available at http://127.0.0.1:8000/swagger.yaml</li> </ul>"},{"location":"assets/Swagger/SWAGGER_IMPLEMENTATION_SUMMARY/#8-additional-documentation","title":"8. Additional Documentation","text":""},{"location":"assets/Swagger/SWAGGER_IMPLEMENTATION_SUMMARY/#api-usage-guide","title":"API Usage Guide:","text":"<ul> <li>\u2705 Created comprehensive API_README.md</li> <li>\u2705 Complete endpoint documentation with examples</li> <li>\u2705 cURL command examples for all endpoints</li> <li>\u2705 Authentication setup instructions</li> <li>\u2705 Error handling and status codes</li> </ul>"},{"location":"assets/Swagger/SWAGGER_IMPLEMENTATION_SUMMARY/#9-issue-resolution","title":"9. Issue Resolution","text":""},{"location":"assets/Swagger/SWAGGER_IMPLEMENTATION_SUMMARY/#swagger-generation-error-resolved","title":"Swagger Generation Error (RESOLVED):","text":"<ul> <li>\u2705 Issue: <code>request_body can only be applied to (PUT,PATCH,POST,DELETE)</code> error</li> <li>\u2705 Root Cause: The <code>perfil_cliente</code> function had <code>@swagger_auto_schema(methods=['get', 'put'])</code> with <code>request_body</code> parameter, which is invalid for GET methods</li> <li>\u2705 Solution: Split the decorator into separate <code>@swagger_auto_schema</code> decorators for GET and PUT methods</li> <li>\u2705 Result: All endpoints now generate properly without errors</li> </ul>"},{"location":"assets/Swagger/SWAGGER_IMPLEMENTATION_SUMMARY/#technical-implementation-quality","title":"Technical Implementation Quality:","text":"<ul> <li>\u2705 All syntax errors resolved</li> <li>\u2705 Proper method-specific documentation</li> <li>\u2705 Request/response schemas validated</li> <li>\u2705 Error handling documented</li> <li>\u2705 Server running without issues</li> </ul>"},{"location":"assets/Swagger/SWAGGER_IMPLEMENTATION_SUMMARY/#10-final-verification","title":"10. Final Verification","text":""},{"location":"assets/Swagger/SWAGGER_IMPLEMENTATION_SUMMARY/#endpoint-testing-results","title":"Endpoint Testing Results:","text":"<ul> <li>\u2705 Swagger UI: http://127.0.0.1:8000/swagger/ - Fully functional</li> <li>\u2705 ReDoc Interface: http://127.0.0.1:8000/redoc/ - Fully functional  </li> <li>\u2705 JSON Schema: http://127.0.0.1:8000/swagger.json - Valid JSON generated</li> <li>\u2705 YAML Schema: http://127.0.0.1:8000/swagger.yaml - Valid YAML generated</li> <li>\u2705 Server Status: Django development server running successfully</li> </ul>"},{"location":"assets/Swagger/SWAGGER_IMPLEMENTATION_SUMMARY/#documentation-coverage-verification","title":"Documentation Coverage Verification:","text":"<ul> <li>\u2705 15+ API Endpoints: All properly documented</li> <li>\u2705 4 ViewSets: Complete with docstrings and method documentation</li> <li>\u2705 6 Custom Actions: All with @swagger_auto_schema decorators</li> <li>\u2705 4 API Functions: All with proper request/response schemas</li> <li>\u2705 Authentication: Session-based auth documented</li> <li>\u2705 Permissions: IsOwnerOrStaff documented</li> </ul>"},{"location":"assets/Swagger/SWAGGER_IMPLEMENTATION_SUMMARY/#access-urls","title":"Access URLs","text":"<ul> <li>Main Application: http://127.0.0.1:8000/</li> <li>Swagger UI: http://127.0.0.1:8000/swagger/</li> <li>ReDoc Interface: http://127.0.0.1:8000/redoc/</li> <li>API Schema (JSON): http://127.0.0.1:8000/swagger.json</li> <li>API Schema (YAML): http://127.0.0.1:8000/swagger.yaml</li> </ul>"},{"location":"assets/Swagger/SWAGGER_IMPLEMENTATION_SUMMARY/#benefits-achieved","title":"Benefits Achieved","text":"<ol> <li>Developer Experience: Interactive API documentation with try-it-out functionality</li> <li>API Discovery: Easy exploration of all available endpoints and operations</li> <li>Integration Support: Machine-readable API schema for client generation</li> <li>Documentation Maintenance: Auto-generated docs that stay in sync with code</li> <li>Testing Capabilities: Built-in API testing interface</li> <li>Professional Presentation: Clean, organized API documentation interface</li> </ol>"},{"location":"assets/Swagger/SWAGGER_IMPLEMENTATION_SUMMARY/#next-steps","title":"Next Steps","text":"<p>The Swagger API documentation is now complete and fully functional. Developers can:</p> <ol> <li>Access the interactive Swagger UI to explore and test API endpoints</li> <li>Use the ReDoc interface for a clean documentation reading experience</li> <li>Download the API schema (JSON/YAML) for client code generation</li> <li>Reference the API_README.md for detailed usage examples</li> </ol> <p>The implementation follows best practices and provides comprehensive documentation for the entire Simblissima food ordering system API.</p>"},{"location":"construcao/construcao/","title":"Documento de Constru\u00e7\u00e3o","text":""},{"location":"construcao/construcao/#introducao","title":"Introdu\u00e7\u00e3o","text":"<p> Este documento detalha a fase de constru\u00e7\u00e3o do projeto Simbl\u00edssima, descrevendo a arquitetura, tecnologias e implementa\u00e7\u00e3o do sistema de gerenciamento de pedidos. </p>"},{"location":"construcao/construcao/#metodologia","title":"Metodologia","text":"<p> A constru\u00e7\u00e3o do sistema foi realizada utilizando uma abordagem modular, com separa\u00e7\u00e3o clara entre frontend e backend. O desenvolvimento seguiu boas pr\u00e1ticas de programa\u00e7\u00e3o e padr\u00f5es de projeto estabelecidos. </p>"},{"location":"construcao/construcao/#desenvolvimento","title":"Desenvolvimento","text":""},{"location":"construcao/construcao/#versao-10","title":"Vers\u00e3o 1.0","text":""},{"location":"construcao/construcao/#1-arquitetura-do-sistema","title":"1. Arquitetura do Sistema","text":"<p> - Frontend: Interface web responsiva - Backend: API RESTful - Banco de Dados: Sistema relacional - Autentica\u00e7\u00e3o: Sistema de login e controle de acesso </p>"},{"location":"construcao/construcao/#2-modulos-principais","title":"2. M\u00f3dulos Principais","text":"<p> - **Gerenciamento de Pedidos**:   - Cria\u00e7\u00e3o e acompanhamento de pedidos   - Atualiza\u00e7\u00e3o de status   - Hist\u00f3rico de altera\u00e7\u00f5es   - C\u00e1lculo autom\u00e1tico de valores  - **Interface do Cliente**:   - Visualiza\u00e7\u00e3o de pedidos   - Acompanhamento de status   - Hist\u00f3rico de transa\u00e7\u00f5es   - Sistema de notifica\u00e7\u00f5es  - **Dashboard do Administrador**:   - Gest\u00e3o completa de pedidos   - Atualiza\u00e7\u00e3o de status   - Defini\u00e7\u00e3o de valores finais   - Filtros e ordena\u00e7\u00e3o </p>"},{"location":"construcao/construcao/#3-funcionalidades-implementadas","title":"3. Funcionalidades Implementadas","text":"<p> - Sistema de autentica\u00e7\u00e3o de usu\u00e1rios - CRUD completo de pedidos - Atualiza\u00e7\u00e3o em tempo real - Hist\u00f3rico de status - C\u00e1lculo de valores - Filtros e ordena\u00e7\u00e3o - Interface responsiva - Valida\u00e7\u00f5es de formul\u00e1rios </p>"},{"location":"construcao/construcao/#4-tecnologias-utilizadas","title":"4. Tecnologias Utilizadas","text":"<p> - Frontend: JavaScript, HTML5, CSS3, Bootstrap - Backend: Django, Python - Banco de Dados: SQLite3 - Controle de Vers\u00e3o: Git - Documenta\u00e7\u00e3o: MkDocs </p>"},{"location":"construcao/construcao/#conclusao","title":"Conclus\u00e3o","text":"<p> A fase de constru\u00e7\u00e3o resultou em um sistema robusto e funcional, atendendo aos requisitos estabelecidos e oferecendo uma experi\u00eancia fluida tanto para clientes quanto para administradores. A arquitetura modular permite f\u00e1cil manuten\u00e7\u00e3o e futuras expans\u00f5es. </p>"},{"location":"construcao/construcao/#referencias","title":"Refer\u00eancias","text":"<p>GAMMA, E. et al. Design Patterns: Elements of Reusable Object-Oriented Software. Addison-Wesley, 1994.</p> <p>DJANGO Documentation. Django Software Foundation, 2023.</p>"},{"location":"construcao/construcao/#autores","title":"Autor(es)","text":"Data Vers\u00e3o Descri\u00e7\u00e3o Autor(es) 04/06/2025 1.0 Cria\u00e7\u00e3o do documento de constru\u00e7\u00e3o Bernardo Lobo, Bernardo Moreira, Guilherme Dias, Julia Curto e Michel de Melo"},{"location":"elaboracao/diagrama_de_casos_de_uso/","title":"Diagrama de Caso de Uso","text":""},{"location":"elaboracao/diagrama_de_casos_de_uso/#introducao","title":"Introdu\u00e7\u00e3o","text":"<p> O diagrama de caso de uso \u00e9 uma representa\u00e7\u00e3o gr\u00e1fica das intera\u00e7\u00f5es entre os usu\u00e1rios (cliente/morador, gerente/admin) e o sistema Simblissima. Ele descreve as funcionalidades esperadas do sistema sob o ponto de vista do usu\u00e1rio, permitindo uma vis\u00e3o geral dos requisitos funcionais e auxiliando na compreens\u00e3o do comportamento do sistema de gerenciamento de pedidos e entregas. </p>"},{"location":"elaboracao/diagrama_de_casos_de_uso/#metodologia","title":"Metodologia","text":"<p> Para a cria\u00e7\u00e3o da primeira vers\u00e3o do diagrama de caso de uso, a equipe utilizou o programa ArgoUML. Al\u00e9m disso, foram utilizados o Discord e o WhatsApp para comunica\u00e7\u00e3o e o Visual Studio Code / Live Share para colabora\u00e7\u00e3o na documenta\u00e7\u00e3o. </p>"},{"location":"elaboracao/diagrama_de_casos_de_uso/#diagrama-de-caso-de-uso","title":"Diagrama de Caso de Uso","text":""},{"location":"elaboracao/diagrama_de_casos_de_uso/#versao-10","title":"Vers\u00e3o 1.0","text":""},{"location":"elaboracao/diagrama_de_casos_de_uso/#rastreabilidade-de-requisitos","title":"Rastreabilidade de Requisitos","text":"ID Descri\u00e7\u00e3o CU01 Realizar Cadastro (Cliente) CU02 Realizar Login (Cliente/Gerente) CU03 Criar Pedido (Cliente) CU04 Visualizar Pedidos (Cliente) CU05 Ver Detalhes do Pedido (Cliente) CU06 Confirmar Valor Final (Cliente) CU07 Recusar Valor Final (Cliente) CU08 Atualizar Perfil (Cliente) CU09 Gerenciar Pedidos (Gerente) CU10 Atualizar Status do Pedido (Gerente) CU11 Definir Valor Final do Pedido (Gerente) CU12 Visualizar Dashboard (Gerente)"},{"location":"elaboracao/diagrama_de_casos_de_uso/#conclusao","title":"Conclus\u00e3o","text":"<p> Com o diagrama de caso de uso, foi poss\u00edvel visualizar as intera\u00e7\u00f5es dos usu\u00e1rios (clientes e gerentes) com o sistema Simblissima de forma clara e organizada, facilitando a identifica\u00e7\u00e3o dos requisitos funcionais essenciais para o gerenciamento de pedidos. Ao longo do desenvolvimento do projeto, o diagrama ser\u00e1 revisado e refinado para refletir novas funcionalidades e mudan\u00e7as nos processos. </p>"},{"location":"elaboracao/diagrama_de_casos_de_uso/#referencias","title":"Refer\u00eancias","text":"<p>Use Case Diagrams. Dispon\u00edvel em: https://www.uml-diagrams.org/use-case-diagrams.html. Acesso em 06/05/25</p> <p>UML Use Case Diagram Tutorial. Dispon\u00edvel em: https://www.youtube.com/watch?v=OkCjC0Y1dxM. Acesso em 06/05/25</p>"},{"location":"elaboracao/diagrama_de_casos_de_uso/#autores","title":"Autor(es)","text":"Data Vers\u00e3o Descri\u00e7\u00e3o Autor(es) 06/05/25 1.0 Cria\u00e7\u00e3o do documento Bernardo Lobo, Bernardo Moreira, Guilherme Dias, Julia Curto e Michel de Melo 02/06/25 1.1 Atualiza\u00e7\u00e3o do diagrama de caso de uso e rastreabilidade de requisitos para refletir o projeto Simblissima Bernardo Lobo, Bernardo Moreira, Guilherme Dias, Julia Curto e Michel de Melo"},{"location":"elaboracao/diagrama_de_classes/","title":"Diagrama de Classes","text":""},{"location":"elaboracao/diagrama_de_classes/#introducao","title":"Introdu\u00e7\u00e3o","text":"<p> O diagrama de classes UML \u00e9 um diagrama que mostra a estrutura do sistema Simblissima desenhada no n\u00edvel de classes e interfaces. Ele ilustra as funcionalidades, depend\u00eancias e relacionamentos de cada elemento, fornecendo uma representa\u00e7\u00e3o visual da arquitetura do banco de dados e da l\u00f3gica de neg\u00f3cio do aplicativo de gerenciamento de pedidos. </p>"},{"location":"elaboracao/diagrama_de_classes/#metodologia","title":"Metodologia","text":"<p> Para a cria\u00e7\u00e3o da primeira vers\u00e3o do diagrama de classes, a equipe utilizou o PlantUML. Al\u00e9m disso, foi utilizado Discord e WhatsApp para videoconfer\u00eancia e Visual Studio Code / Live Share para elabora\u00e7\u00e3o da documenta\u00e7\u00e3o. </p>"},{"location":"elaboracao/diagrama_de_classes/#diagrama-de-classes","title":"Diagrama de Classes","text":""},{"location":"elaboracao/diagrama_de_classes/#versao-10","title":"Vers\u00e3o 1.0","text":""},{"location":"elaboracao/diagrama_de_classes/#rastreabilidade-de-requisitos","title":"Rastreabilidade de Requisitos","text":"ID do Caso de Uso Classe(s) Impactada(s) CU01 (Realizar Cadastro) Cliente, User CU02 (Realizar Login) User CU03 (Criar Pedido) Pedido, ItemPedido CU04 (Visualizar Pedidos) Pedido, ItemPedido, StatusPedido CU05 (Ver Detalhes do Pedido) Pedido, ItemPedido, StatusPedido CU06 (Confirmar Valor Final) Pedido, StatusPedido CU07 (Recusar Valor Final) Pedido, StatusPedido CU08 (Atualizar Perfil) Cliente, User CU09 (Gerenciar Pedidos) Pedido, ItemPedido, StatusPedido, Cliente, User CU10 (Atualizar Status do Pedido) Pedido, StatusPedido CU11 (Definir Valor Final do Pedido) Pedido CU12 (Visualizar Dashboard) Pedido, StatusPedido, Cliente, User"},{"location":"elaboracao/diagrama_de_classes/#conclusao","title":"Conclus\u00e3o","text":"<p> Atrav\u00e9s do diagrama de classes, foi poss\u00edvel representar a estrutura interna do sistema Simblissima a n\u00edvel de classes, alinhando-se diretamente com os modelos de dados definidos em `models.py`. Este diagrama auxilia na modelagem da arquitetura geral e do banco de dados, clarificando as rela\u00e7\u00f5es entre `User`, `Cliente`, `Pedido`, `ItemPedido` e `StatusPedido`. Ao longo do desenvolvimento da disciplina, continuaremos a adaptar e evoluir o diagrama e sua documenta\u00e7\u00e3o para refletir o estado atual do projeto. </p>"},{"location":"elaboracao/diagrama_de_classes/#referencias","title":"Refer\u00eancias","text":"<p>UML Class and Object Diagrams Overview. Dispon\u00edvel em https://www.uml-diagrams.org/class-diagrams-overview.html. Acesso em 21/09/2020</p> <p>UML Class Diagram Tutorial. Dispon\u00edvel em https://www.lucidchart.com/pages/uml-class-diagram. Acesso em 02/06/2025 https://www.reddit.com/r/NoStupidQuestions/comments/hgkc5g/whats_a_gender_neutral_alternative_to_dear/?tl=pt-br</p> <p>UML Class Relationship Diagrams. Dispon\u00edvel em https://www.cs.odu.edu/~zeil/cs330/latest/Public/classDiagrams/index.html#other-class-diagram-elements. Acesso em 19/10/2020</p>"},{"location":"elaboracao/diagrama_de_classes/#autores","title":"Autor(es)","text":"Data Vers\u00e3o Descri\u00e7\u00e3o Autor(es) 06/05/25 1.0 Cria\u00e7\u00e3o do documento Bernardo Lobo, Bernardo Moreira, Guilherme Dias, Julia Curto e Michel de Melo 02/06/25 1.1 Atualiza\u00e7\u00e3o do diagrama de classes e rastreabilidade de requisitos para refletir os modelos do projeto Simblissima Bernardo Lobo, Bernardo Moreira, Guilherme Dias, Julia Curto e Michel de Melo"},{"location":"iniciacao/5w2h/","title":"5W2H","text":""},{"location":"iniciacao/5w2h/#introducao","title":"Introdu\u00e7\u00e3o","text":"<p>     O 5W2H \u00e9 uma ferramenta administrativa  que pode ser utilizada para diferentes contextos dentro de uma organiza\u00e7\u00e3o, como na organiza\u00e7\u00e3o para planejamento estrat\u00e9gico e guia na execu\u00e7\u00e3o de a\u00e7\u00f5es. O 5W2H baseia-se em 7 perguntas (What?, Why?, Where?, Who?, When?, How? e How much?), com o intuito de esclarecer e organizar ideias. A ferramenta ser\u00e1 utilizada como um guia de a\u00e7\u00f5es, tornando os objetivos mais evidentes para a equipe, auxiliando na compreens\u00e3o, organiza\u00e7\u00e3o e tomadas de decis\u00f5es no projeto. </p>"},{"location":"iniciacao/5w2h/#metodologia","title":"Metodologia","text":"<p>     A equipe se reuniu para esclarecimento sobre o tema do projeto, a partir dos pontos debatidos foi poss\u00edvel responder \u00e0s quest\u00f5es do 5W2H.   </p>"},{"location":"iniciacao/5w2h/#questoes-5w2h","title":"Quest\u00f5es 5W2H","text":""},{"location":"iniciacao/5w2h/#versao-10","title":"Vers\u00e3o 1.0","text":""},{"location":"iniciacao/5w2h/#visao-geral","title":"Vis\u00e3o geral","text":"Quest\u00e3o Resposta What?(O que deve ser\u00e1 feito?) Aplicativo Back end com o objetivo de viabilizar um sistema que facilitar\u00e1 a logistica de entregas de produtos na Ilha Primeira Why? (Por que isso ser\u00e1 feito?) Para atender uma demanda dos moradores que residem na ilha, uma vez que todo e qualquer contato com o continente \u00e9 escasso e promovido pelo meio maritimo civil Where? (Onde ser\u00e1 feito?) O trabalho ser\u00e1 realizado durante a disciplina IBM8936, Projeto Back-End, por meio dos esfor\u00e7os dos colaboradores integrantes do grupo ao decorrer do semestre When? (Quando ser\u00e1 feito?) Durante o semestre de 2025.1 Who? (Quem ir\u00e1 fazer?) A equipe \u00e9 formada pelos alunos Bernardo Lobo, Bernardo Moreira, Guilherme Dias, Julia Curto e Michel de Melo How? (Como ser\u00e1 feito?) Utilizando metodologia RUP/UP e ferramentas como Python, Django, Sqlite e pesquisas de campo How much? (Quanto custar\u00e1?) O custo do projeto ser\u00e1 o tempo e esfor\u00e7o para o desenvolvimento da aplica\u00e7\u00e3o"},{"location":"iniciacao/5w2h/#versao-20","title":"Vers\u00e3o 2.0","text":""},{"location":"iniciacao/5w2h/#visao-produto","title":"Vis\u00e3o produto","text":"Quest\u00e3o Resposta What?(O que deve ser\u00e1 feito?) Gerenciamento de pedidos e entregas para a Ilha Primeira, facilitando a log\u00edstica de produtos do continente atrav\u00e9s de uma API REST. Why? (Por que isso ser\u00e1 feito?) Para auxiliar na democratiza\u00e7\u00e3o do acesso a bens e mercadorias dispon\u00edveis no continente para os moradores da Ilha Primeira. Where? (Onde ser\u00e1 feito?) A ger\u00eancia ser\u00e1 feita atrav\u00e9s de uma plataforma web (SPA) que se comunica com a API REST, acess\u00edvel de qualquer dispositivo com navegador. When? (Quando ser\u00e1 feito?) A ger\u00eancia ser\u00e1 cont\u00ednua, permitindo o acompanhamento de pedidos e atualiza\u00e7\u00f5es em tempo real. Who? (Quem ir\u00e1 fazer?) Clientes (moradores da ilha) para cria\u00e7\u00e3o e acompanhamento de pedidos, e gerentes (staff) para gest\u00e3o e atualiza\u00e7\u00e3o de status. How? (Como ser\u00e1 feito?) Utilizando o aplicativo Simblissima, onde clientes podem registrar-se, fazer pedidos e acompanhar seus status, e gerentes podem gerenciar todo o fluxo de pedidos. How much? (Quanto custar\u00e1?) Tempo e esfor\u00e7o para o desenvolvimento e manuten\u00e7\u00e3o da aplica\u00e7\u00e3o."},{"location":"iniciacao/5w2h/#conclusao","title":"Conclus\u00e3o","text":"<p>O 5W2H \u00e9 um t\u00e9cnica bem simples e de f\u00e1cil entendimento, sem a necessidade de um especialista. Dentro da disciplina a t\u00e9cnica fornece um entendimento melhor, para a equipe, sobre o projeto como responsabilidades, motiva\u00e7\u00e3o e organiza\u00e7\u00e3o de a\u00e7\u00f5es.   </p>"},{"location":"iniciacao/5w2h/#referencias-bibliograficas","title":"Refer\u00eancias Bibliogr\u00e1ficas","text":"<p>5W2H: disponivel em :https://www../</p> <p>O que \u00e9 5W2H, disponivel em :https://www...</p>"},{"location":"iniciacao/5w2h/#autores","title":"Autor(es)","text":"Data Vers\u00e3o Descri\u00e7\u00e3o Autor(es) 24/03/25 1.0 Cria\u00e7\u00e3o do documento Bernardo Lobo, Bernardo Moreira, Guilherme Dias, Julia Curto e Michel de Melo 02/06/25 2.0 Atualizada vis\u00e3o produto e respostas para refletir o Simblissima Bernardo Lobo, Bernardo Moreira, Guilherme Dias, Julia Curto e Michel de Melo"},{"location":"iniciacao/Brainstorm/","title":"Brainstorm","text":""},{"location":"iniciacao/Brainstorm/#introducao","title":"Introdu\u00e7\u00e3o","text":"<p> O brainstorm \u00e9 uma t\u00e9cnica de elicita\u00e7\u00e3o de requisitos que consiste em reunir a equipe e discutir sobre diversos t\u00f3picos gerais do projeto apresentados no documento problema de neg\u00f3cio. No brainstorm o di\u00e1logo \u00e9 incentivado e cr\u00edticas s\u00e3o evitadas para permitir que todos colaborem com suas pr\u00f3prias ideias. </p>"},{"location":"iniciacao/Brainstorm/#metodologia","title":"Metodologia","text":"<p> A equipe se reuniu para debater ideias gerais sobre o projeto via encontro presencial durante a aula, come\u00e7ando e desenvolvendo uma ideia inicial durante a mesma. Bernardo Lobo atuou como moderador, direcionando a equipe com quest\u00f5es pr\u00e9-elaboradas e transcrevendo as respostas para o documento. </p>"},{"location":"iniciacao/Brainstorm/#brainstorm","title":"Brainstorm","text":""},{"location":"iniciacao/Brainstorm/#versao-10","title":"Vers\u00e3o 1.0","text":""},{"location":"iniciacao/Brainstorm/#perguntas","title":"Perguntas","text":""},{"location":"iniciacao/Brainstorm/#1-qual-o-objetivo-principal-da-aplicacao","title":"1. Qual o objetivo principal da aplica\u00e7\u00e3o?","text":"<p> **Bernardo Lobo** - Deve ser uma plataforma onde qualquer pessoa possa acessar e fazer um pedido de um produto que ser\u00e1 entregue do continente para a Ilha Primeira, facilitando a log\u00edstica. </p> <p>Bernardo Moreira - A plataforma deve fornecer pontos de ancoragem para recebimento da mercadoria no continente e um servi\u00e7o de log\u00edstica para o translocamento da mesma para outros pontos de entrega na Ilha Primeira, utilizando a infraestrutura de barcos existente.</p> <p>Guilherme Dias - O objetivo da aplica\u00e7\u00e3o \u00e9 facilitar o acesso a produtos disponibilizados apenas em terra para as pessoas residentes da ilha, permitindo que criem e acompanhem seus pedidos.</p> <p>Julia Curto - O principal objetivo da aplica\u00e7\u00e3o \u00e9 a democratiza\u00e7\u00e3o do acesso \u00e0 bens e mercadorias dispon\u00edveis de forma equit\u00e1ria para a sociedade continental dentro da ilha, com um sistema gerenci\u00e1vel.</p> <p>Michel de Melo - A plataforma deve gerenciar um sistema de log\u00edstica completo para a entrega dos pedidos aos moradores da ilha, incluindo o acompanhamento de status e a gest\u00e3o de valor final. </p>"},{"location":"iniciacao/Brainstorm/#2-como-sera-o-processo-para-cadastrar-um-novo-cliente","title":"2. Como ser\u00e1 o processo para cadastrar um novo cliente?","text":"<p> **Bernardo Lobo** - O cliente deve poder se cadastrar diretamente na plataforma fornecendo CPF, email, nome, sobrenome, telefone e endere\u00e7o, sendo o CPF utilizado como nome de usu\u00e1rio.  **Bernardo Moreira** - Ap\u00f3s o cadastro inicial, o sistema deve associar os dados do cliente a um usu\u00e1rio, permitindo o login e a personaliza\u00e7\u00e3o do perfil.  **Guilherme Dias** - O cliente, enquanto usu\u00e1rio da plataforma, deve poder adicionar itens no pedido, indicando a descri\u00e7\u00e3o e o pre\u00e7o de cada item.  **Julia Curto** - Com o usu\u00e1rio logado, ele dever\u00e1 poder acessar a \u00e1rea de gerenciamento de pedidos, ver um hist\u00f3rico de pedidos e tamb\u00e9m realizar um novo pedido de entrega.  **Michel de Melo** - A plataforma deve validar os dados de cadastro e garantir que o CPF e email sejam \u00fanicos para evitar duplica\u00e7\u00f5es e problemas de seguran\u00e7a.  ---  ### 3. Como ser\u00e1 a forma de adicionar pedidos?  <p> **Bernardo Lobo** - O cliente, ao criar um novo pedido, insere a descri\u00e7\u00e3o e o pre\u00e7o de cada item, e pode adicionar observa\u00e7\u00f5es gerais para a entrega. O sistema calcular\u00e1 o valor total dos produtos. </p>  ---  ### 4. Outras perguntas pertinentes ao contexto  <p> **Bernardo Moreira** - Nosso sistema funciona baseado em localidades \u00e2ncora, onde estar\u00e1 presente um ponto de acesso para o trabalho de log\u00edstica. Essa log\u00edstica far\u00e1 o transporte dos bens at\u00e9 outro ponto mais acess\u00edvel ao morador da ilha, ou diretamente na resid\u00eancia, dependendo da infraestrutura.  **Guilherme Dias** - O gerente deve ter uma vis\u00e3o geral de todos os pedidos, podendo filtrar por status e atualizar o andamento, incluindo a defini\u00e7\u00e3o de um valor final para o pedido e adi\u00e7\u00e3o de coment\u00e1rios.  **Julia Curto** - O sistema deve permitir o rastreamento do status do pedido em tempo real, informando ao cliente sobre cada etapa da entrega, desde a cria\u00e7\u00e3o at\u00e9 a finaliza\u00e7\u00e3o.  **Michel de Melo** - A comunica\u00e7\u00e3o sobre o valor final e a confirma\u00e7\u00e3o de pagamento devem ser claras, permitindo ao cliente aceitar ou recusar o valor proposto pelo gerente.  ---  ### Requisitos elicitados  |ID|Descri\u00e7\u00e3o| |----|-------------| |BS01| O sistema deve permitir o cadastro de novos clientes com CPF, e-mail, nome, sobrenome, telefone e endere\u00e7o.| |BS02| O sistema deve permitir que clientes loguem com CPF e senha.| |BS03| O cliente deve poder criar um novo pedido, adicionando m\u00faltiplos itens com descri\u00e7\u00e3o e pre\u00e7o.| |BS04| O pedido deve ter um campo para observa\u00e7\u00f5es gerais.| |BS05| O sistema deve calcular o valor total dos produtos no pedido automaticamente.| |BS06| O cliente deve poder visualizar o hist\u00f3rico de seus pedidos e seus respectivos status.| |BS07| O gerente (staff) deve ter acesso a um dashboard para visualizar e gerenciar todos os pedidos.| |BS08| O gerente deve poder atualizar o status de um pedido.| |BS09| O gerente deve poder definir um valor final para o pedido, que pode ser diferente do valor total.| |BS10| O cliente deve ser notificado sobre mudan\u00e7as no status do pedido e sobre o valor final proposto.| |BS11| O cliente deve poder confirmar ou recusar o valor final proposto pelo gerente.| |BS12| O hist\u00f3rico de status de cada pedido deve ser registrado com data e coment\u00e1rio.| |BS13| O sistema deve permitir o gerenciamento de perfis de clientes (atualiza\u00e7\u00e3o de nome, sobrenome, e-mail, endere\u00e7o, telefone e senha).| |BS14| O sistema deve ser acess\u00edvel via navegador web, com uma interface Single Page Application (SPA).| |BS15| O sistema deve permitir o login e logout de usu\u00e1rios.|  ## Conclus\u00e3o <p> Atrav\u00e9s da aplica\u00e7\u00e3o da t\u00e9cnica de Brainstorm, foi poss\u00edvel elicitar um conjunto inicial de requisitos funcionais e n\u00e3o funcionais para o projeto Simblissima, alinhados com a proposta de facilitar a log\u00edstica de entregas na Ilha Primeira. </p>  ## Autor(es) | Data | Vers\u00e3o | Descri\u00e7\u00e3o | Autor(es) | | -- | -- | -- | -- | | 24/03/2025 | 1.0 | Cria\u00e7\u00e3o do documento | Bernardo Lobo, Bernardo Moreira, Guilherme Dias, Julia Curto e Michel de Melo | | 02/06/2025 | 1.1 | Atualiza\u00e7\u00e3o das perguntas, respostas e requisitos elicitados para refletir o projeto Simblissima | Bernardo Lobo, Bernardo Moreira, Guilherme Dias, Julia Curto e Michel de Melo |"},{"location":"iniciacao/cronograma/","title":"Cronograma do Projeto Simblissima","text":""},{"location":"iniciacao/cronograma/#introducao","title":"Introdu\u00e7\u00e3o","text":"<p> Este documento apresenta o cronograma detalhado para o desenvolvimento do projeto Simblissima, uma API REST para gerenciamento de pedidos e entregas entre o continente e a Ilha Primeira. O cronograma est\u00e1 organizado por fases do processo de desenvolvimento e considera as pr\u00e1ticas da metodologia RUP (Rational Unified Process). </p>"},{"location":"iniciacao/cronograma/#metodologia","title":"Metodologia","text":"<p> O cronograma foi elaborado seguindo as fases do RUP: Inicia\u00e7\u00e3o, Elabora\u00e7\u00e3o, Constru\u00e7\u00e3o e Transi\u00e7\u00e3o. As atividades foram distribu\u00eddas ao longo do semestre 2025.1, considerando as entregas parciais e o desenvolvimento iterativo e incremental. </p>"},{"location":"iniciacao/cronograma/#cronograma-detalhado","title":"Cronograma Detalhado","text":""},{"location":"iniciacao/cronograma/#fase-1-iniciacao-05022025-12042025","title":"Fase 1: Inicia\u00e7\u00e3o (05/02/2025 - 12/04/2025)","text":"Semana Data Atividade Respons\u00e1vel Status 1 05/02 - 09/02 Defini\u00e7\u00e3o do tema e escopo do projeto Toda equipe \u2705 Conclu\u00eddo 2 12/02 - 16/02 Brainstorming e levantamento de ideias Toda equipe \u2705 Conclu\u00eddo 3 19/02 - 23/02 Elabora\u00e7\u00e3o do Documento de Vis\u00e3o Guilherme Dias \u2705 Conclu\u00eddo 4 26/02 - 02/03 Cria\u00e7\u00e3o do 5W2H Toda equipe \u2705 Conclu\u00eddo 5 05/03 - 09/03 Desenvolvimento do Mapa Mental Bernardo Lobo \u2705 Conclu\u00eddo 6 12/03 - 16/03 Realiza\u00e7\u00e3o de entrevistas fict\u00edcias Michel de Melo \u2705 Conclu\u00eddo 7 19/03 - 23/03 Prototipa\u00e7\u00e3o de alta fidelidade Julia Curto \u2705 Conclu\u00eddo 8 26/03 - 30/03 Defini\u00e7\u00e3o da metodologia Bernardo Moreira \u2705 Conclu\u00eddo 9 02/04 - 06/04 Consolida\u00e7\u00e3o da documenta\u00e7\u00e3o de inicia\u00e7\u00e3o Toda equipe \u2705 Conclu\u00eddo 10 09/04 - 12/04 Revis\u00e3o e entrega da Fase 1 Toda equipe \u2705 Conclu\u00eddo"},{"location":"iniciacao/cronograma/#fase-2-elaboracao-13042025-10052025","title":"Fase 2: Elabora\u00e7\u00e3o (13/04/2025 - 10/05/2025)","text":"Semana Data Atividade Respons\u00e1vel Status 11 13/04 - 19/04 Diagrama de Casos de Uso Bernardo Lobo \u2705 Conclu\u00eddo 12 20/04 - 26/04 Diagrama de Classes (PlantUML) Guilherme Dias \u2705 Conclu\u00eddo 13 27/04 - 03/05 Documento de Arquitetura de Software (DAS) Julia Curto \u2705 Conclu\u00eddo 14 04/05 - 10/05 Refinamento dos diagramas e documenta\u00e7\u00e3o Toda equipe \u2705 Conclu\u00eddo"},{"location":"iniciacao/cronograma/#fase-3-construcao-11052025-31052025","title":"Fase 3: Constru\u00e7\u00e3o (11/05/2025 - 31/05/2025)","text":"Semana Data Atividade Respons\u00e1vel Status 15 11/05 - 17/05 Configura\u00e7\u00e3o do ambiente Django Michel de Melo \u2705 Conclu\u00eddo 16 18/05 - 24/05 Implementa\u00e7\u00e3o dos modelos de dados Bernardo Moreira \u2705 Conclu\u00eddo 17 18/05 - 24/05 Desenvolvimento da API REST (serializers/views) Guilherme Dias \u2705 Conclu\u00eddo 18 25/05 - 31/05 Implementa\u00e7\u00e3o da interface frontend (SPA) Julia Curto \u2705 Conclu\u00eddo 19 25/05 - 31/05 Sistema de autentica\u00e7\u00e3o e permiss\u00f5es Bernardo Lobo \u2705 Conclu\u00eddo 20 01/06 - 07/06 Dashboard do gerente e funcionalidades admin Michel de Melo \ud83d\udd04 Em andamento 21 01/06 - 07/06 Integra\u00e7\u00e3o frontend-backend e testes Toda equipe \ud83d\udd04 Em andamento"},{"location":"iniciacao/cronograma/#fase-4-transicao-01062025-15062025","title":"Fase 4: Transi\u00e7\u00e3o (01/06/2025 - 15/06/2025)","text":"Semana Data Atividade Respons\u00e1vel Status 22 08/06 - 14/06 Testes de integra\u00e7\u00e3o e corre\u00e7\u00e3o de bugs Toda equipe \ud83d\udcc5 Planejado 23 08/06 - 14/06 Documenta\u00e7\u00e3o final do sistema Bernardo Moreira \ud83d\udcc5 Planejado 24 15/06 - 21/06 Prepara\u00e7\u00e3o da apresenta\u00e7\u00e3o final Toda equipe \ud83d\udcc5 Planejado 25 15/06 - 21/06 Entrega final do projeto Toda equipe \ud83d\udcc5 Planejado"},{"location":"iniciacao/cronograma/#entregas-principais","title":"Entregas Principais","text":""},{"location":"iniciacao/cronograma/#entrega-1-iniciacao-12042025","title":"\ud83d\udccb Entrega 1 - Inicia\u00e7\u00e3o (12/04/2025)","text":"<ul> <li>\u2705 Documento de Vis\u00e3o</li> <li>\u2705 Brainstorming e requisitos elicitados</li> <li>\u2705 Mapa Mental</li> <li>\u2705 5W2H</li> <li>\u2705 Entrevistas e an\u00e1lise de requisitos</li> <li>\u2705 Prot\u00f3tipo de alta fidelidade</li> <li>\u2705 Defini\u00e7\u00e3o da metodologia</li> </ul>"},{"location":"iniciacao/cronograma/#entrega-2-elaboracao-10052025","title":"\ud83d\udccb Entrega 2 - Elabora\u00e7\u00e3o (10/05/2025)","text":"<ul> <li>\u2705 Diagrama de Casos de Uso</li> <li>\u2705 Diagrama de Classes</li> <li>\u2705 Documento de Arquitetura de Software</li> <li>\u2705 Modelagem de dados refinada</li> </ul>"},{"location":"iniciacao/cronograma/#entrega-3-construcao-07062025","title":"\ud83d\udccb Entrega 3 - Constru\u00e7\u00e3o (07/06/2025)","text":"<ul> <li>\u2705 API REST funcional (Django REST Framework)</li> <li>\u2705 Modelos de dados implementados</li> <li>\u2705 Sistema de autentica\u00e7\u00e3o</li> <li>\ud83d\udd04 Interface web (SPA) completa</li> <li>\ud83d\udd04 Dashboard administrativo</li> </ul>"},{"location":"iniciacao/cronograma/#entrega-final-21062025","title":"\ud83d\udccb Entrega Final (21/06/2025)","text":"<ul> <li>\ud83d\udcc5 Sistema completo e testado</li> <li>\ud83d\udcc5 Documenta\u00e7\u00e3o final consolidada</li> <li>\ud83d\udcc5 Apresenta\u00e7\u00e3o do projeto</li> <li>\ud83d\udcc5 Manual de instala\u00e7\u00e3o e uso</li> </ul>"},{"location":"iniciacao/cronograma/#recursos-e-tecnologias","title":"Recursos e Tecnologias","text":""},{"location":"iniciacao/cronograma/#ferramentas-de-desenvolvimento","title":"\ud83d\udee0\ufe0f Ferramentas de Desenvolvimento","text":"<ul> <li>Backend: Python, Django, Django REST Framework</li> <li>Frontend: HTML5, CSS3, JavaScript, Bootstrap</li> <li>Banco de Dados: SQLite (desenvolvimento)</li> <li>Controle de Vers\u00e3o: Git, GitHub</li> <li>Documenta\u00e7\u00e3o: MkDocs, PlantUML</li> <li>Prototipa\u00e7\u00e3o: Figma</li> </ul>"},{"location":"iniciacao/cronograma/#equipe-e-responsabilidades","title":"\ud83d\udc65 Equipe e Responsabilidades","text":"<ul> <li>Bernardo Lobo: An\u00e1lise de requisitos, casos de uso, autentica\u00e7\u00e3o</li> <li>Bernardo Moreira: Metodologia, modelos de dados, documenta\u00e7\u00e3o</li> <li>Guilherme Dias: Documento de vis\u00e3o, API REST, integra\u00e7\u00e3o</li> <li>Julia Curto: Prot\u00f3tipo, interface frontend, arquitetura</li> <li>Michel de Melo: Entrevistas, ambiente de desenvolvimento, dashboard</li> </ul>"},{"location":"iniciacao/cronograma/#riscos-e-mitigacoes","title":"Riscos e Mitiga\u00e7\u00f5es","text":"Risco Probabilidade Impacto Mitiga\u00e7\u00e3o Atraso na implementa\u00e7\u00e3o da API Baixa Alto Divis\u00e3o de tarefas e desenvolvimento paralelo Dificuldades de integra\u00e7\u00e3o frontend-backend M\u00e9dia M\u00e9dio Testes cont\u00ednuos e comunica\u00e7\u00e3o da equipe Problemas de compatibilidade entre tecnologias Baixa M\u00e9dio Pesquisa pr\u00e9via e testes de conceito Aus\u00eancia de membros da equipe M\u00e9dia Baixo Distribui\u00e7\u00e3o de conhecimento e backup"},{"location":"iniciacao/cronograma/#legenda","title":"Legenda","text":"<ul> <li>\u2705 Conclu\u00eddo: Atividade finalizada</li> <li>\ud83d\udd04 Em andamento: Atividade sendo executada</li> <li>\ud83d\udcc5 Planejado: Atividade agendada para execu\u00e7\u00e3o</li> <li>\u26a0\ufe0f Atrasado: Atividade com atraso identificado</li> <li>\u274c Cancelado: Atividade cancelada ou modificada</li> </ul>"},{"location":"iniciacao/cronograma/#conclusao","title":"Conclus\u00e3o","text":"<p> O cronograma apresentado reflete o planejamento realista para o desenvolvimento do projeto Simblissima, considerando as pr\u00e1ticas de desenvolvimento \u00e1gil e as entregas parciais da disciplina. O progresso est\u00e1 sendo monitorado semanalmente e ajustes s\u00e3o feitos conforme necess\u00e1rio para garantir a entrega de um produto de qualidade. </p>"},{"location":"iniciacao/cronograma/#referencias","title":"Refer\u00eancias","text":"<p>Project Management Body of Knowledge (PMBOK). 6\u00aa ed. Project Management Institute, 2017.</p> <p>RATIONAL SOFTWARE CORPORATION. Rational Unified Process. IBM, 2003.</p>"},{"location":"iniciacao/cronograma/#autores","title":"Autor(es)","text":"Data Vers\u00e3o Descri\u00e7\u00e3o Autor(es) 04/06/2025 1.0 Cria\u00e7\u00e3o do cronograma detalhado Bernardo Lobo, Bernardo Moreira, Guilherme Dias, Julia Curto e Michel de Melo"},{"location":"iniciacao/documento_de_visao/","title":"Documento de Vis\u00e3o","text":""},{"location":"iniciacao/documento_de_visao/#introducao","title":"Introdu\u00e7\u00e3o","text":"<p> O prop\u00f3sito deste documento \u00e9 fornecer uma vis\u00e3o geral sobre o projeto Simblissima, que ser\u00e1 realizado na disciplina Arquitetura e Desenho de Software 2020/1, na Universidade de Bras\u00edlia. Descrever\u00e1 de maneira resumida as principais funcionalidades, usabilidades, o problema que ser\u00e1 abordado e os objetivos da equipe, com foco na solu\u00e7\u00e3o de log\u00edstica de entregas para a Ilha Primeira. </p>"},{"location":"iniciacao/documento_de_visao/#descricao-do-problema","title":"Descri\u00e7\u00e3o do Problema","text":"<p> Atualmente, os moradores da Ilha Primeira enfrentam desafios significativos para adquirir produtos e mercadorias dispon\u00edveis no continente. A depend\u00eancia exclusiva de meios de transporte mar\u00edtimo civis para acesso aos bens essenciais cria gargalos log\u00edsticos, dificultando a organiza\u00e7\u00e3o e o rastreamento das entregas. Isso resulta em inconveni\u00eancia, falta de transpar\u00eancia sobre o status dos pedidos e, por vezes, a impossibilidade de acesso a uma variedade maior de produtos. </p>"},{"location":"iniciacao/documento_de_visao/#problema","title":"Problema","text":"<p>Dificuldade em gerenciar e organizar a log\u00edstica de entregas de produtos do continente para a Ilha Primeira, resultando em falta de transpar\u00eancia e efici\u00eancia para moradores e prestadores de servi\u00e7o.</p>"},{"location":"iniciacao/documento_de_visao/#impactados","title":"Impactados","text":"<p>Usu\u00e1rios (moradores da Ilha Primeira) que desejam receber produtos do continente, e a equipe de log\u00edstica/gerentes respons\u00e1veis pelas entregas.</p>"},{"location":"iniciacao/documento_de_visao/#consequencia","title":"Consequ\u00eancia","text":"<p>A cria\u00e7\u00e3o de novos pedidos \u00e9 ineficiente, h\u00e1 pouca visibilidade sobre o status das entregas, dificultando o planejamento tanto para clientes quanto para a equipe de gest\u00e3o, e limitando o acesso a bens e mercadorias.</p>"},{"location":"iniciacao/documento_de_visao/#solucao","title":"Solu\u00e7\u00e3o","text":"<p>Utilizar a aplica\u00e7\u00e3o Simblissima, uma API REST com interface web, visando resolver o problema de log\u00edstica ao permitir o gerenciamento completo de pedidos, desde a cria\u00e7\u00e3o e acompanhamento pelo cliente at\u00e9 a atualiza\u00e7\u00e3o de status e valores pelo gerente.</p>"},{"location":"iniciacao/documento_de_visao/#objetivos","title":"Objetivos","text":"<p> O objetivo da equipe de desenvolvimento \u00e9 fornecer uma solu\u00e7\u00e3o eficiente e transparente para o gerenciamento de pedidos e entregas entre o continente e a Ilha Primeira. Isso inclui: <ul> <li>Permitir o registro e login de clientes.</li> <li>Facilitar a cria\u00e7\u00e3o de pedidos com m\u00faltiplos itens e observa\u00e7\u00f5es.</li> <li>Fornecer um sistema de rastreamento de status de pedidos em tempo real para clientes.</li> <li>Disponibilizar um dashboard de gerenciamento para a equipe de log\u00edstica (gerentes) com funcionalidades de atualiza\u00e7\u00e3o de status, defini\u00e7\u00e3o de valor final e visualiza\u00e7\u00e3o de estat\u00edsticas.</li> <li>Garantir a seguran\u00e7a e a integridade dos dados dos usu\u00e1rios e pedidos.</li> </ul> </p>"},{"location":"iniciacao/documento_de_visao/#descricao-do-usuario","title":"Descri\u00e7\u00e3o do Usu\u00e1rio","text":"<p> Os usu\u00e1rios do sistema ser\u00e3o divididos em dois principais grupos: <ul> <li>**Clientes (Moradores da Ilha Primeira):** Pessoas que necessitam solicitar e receber produtos do continente. Eles interagem com o sistema para criar pedidos, acompanhar o status, confirmar valores e gerenciar seus perfis.</li> <li>**Gerentes (Equipe de Log\u00edstica/Administra\u00e7\u00e3o):** Respons\u00e1veis por gerenciar o fluxo de pedidos. Eles utilizam o sistema para visualizar todos os pedidos, atualizar seus status, definir valores finais de entrega e comunicar-se com os clientes sobre o andamento dos pedidos.</li> </ul> </p>"},{"location":"iniciacao/documento_de_visao/#recursos-do-produto","title":"Recursos do produto","text":""},{"location":"iniciacao/documento_de_visao/#conta-cliente-e-gerente","title":"Conta (Cliente e Gerente)","text":"<p> O sistema permitir\u00e1 que novos clientes realizem seu cadastro fornecendo informa\u00e7\u00f5es pessoais (CPF, nome, sobrenome, e-mail, telefone e endere\u00e7o). O CPF ser\u00e1 utilizado como nome de usu\u00e1rio. Clientes e gerentes poder\u00e3o realizar login e logout. Os clientes poder\u00e3o visualizar e editar seus dados de perfil (nome, sobrenome, e-mail, telefone, endere\u00e7o e senha). </p>"},{"location":"iniciacao/documento_de_visao/#gerenciamento-de-pedidos-cliente","title":"Gerenciamento de Pedidos (Cliente)","text":"<p> O cliente poder\u00e1 criar novos pedidos, adicionando m\u00faltiplos itens (com descri\u00e7\u00e3o e pre\u00e7o) e observa\u00e7\u00f5es. O sistema calcular\u00e1 o valor total dos produtos. Ap\u00f3s a cria\u00e7\u00e3o, o cliente poder\u00e1 acompanhar o status do pedido em tempo real e visualizar o hist\u00f3rico de status. Quando o gerente definir um valor final, o cliente poder\u00e1 confirm\u00e1-lo ou recus\u00e1-lo, com a possibilidade de adicionar um motivo para a recusa. </p>"},{"location":"iniciacao/documento_de_visao/#dashboard-e-gestao-de-pedidos-gerente","title":"Dashboard e Gest\u00e3o de Pedidos (Gerente)","text":"<p> Gerentes ter\u00e3o acesso a um dashboard para visualizar todos os pedidos, incluindo estat\u00edsticas (total de pedidos, valor total arrecadado, tempo m\u00e9dio de entrega e pedidos pendentes). Eles poder\u00e3o filtrar pedidos por status e ordenar por diferentes crit\u00e9rios. Gerentes poder\u00e3o atualizar o status de qualquer pedido, definir um valor final de entrega e adicionar coment\u00e1rios no hist\u00f3rico de status, notificando o cliente sobre as altera\u00e7\u00f5es. </p>"},{"location":"iniciacao/documento_de_visao/#restricoes","title":"Restri\u00e7\u00f5es","text":"<p> A aplica\u00e7\u00e3o \u00e9 uma API REST com uma interface Single Page Application (SPA) para clientes e gerentes, focada exclusivamente no gerenciamento de pedidos e entregas entre o continente e a Ilha Primeira. Ela n\u00e3o ser\u00e1 respons\u00e1vel pela realiza\u00e7\u00e3o da entrega f\u00edsica em si, que depender\u00e1 da infraestrutura de transporte mar\u00edtimo existente e dos pontos de ancoragem. N\u00e3o h\u00e1 um sistema de cat\u00e1logo de produtos, sendo os itens do pedido descritos manualmente. A comunica\u00e7\u00e3o externa (SMS, e-mail direto) para notifica\u00e7\u00f5es est\u00e1 fora do escopo inicial, sendo as notifica\u00e7\u00f5es gerenciadas pela pr\u00f3pria interface do sistema. </p>"},{"location":"iniciacao/documento_de_visao/#referencias-bibliograficas","title":"Refer\u00eancias Bibliogr\u00e1ficas","text":"<p>Gemini</p>"},{"location":"iniciacao/documento_de_visao/#versionamento","title":"Versionamento","text":"Data Vers\u00e3o Descri\u00e7\u00e3o Autor(es) DD/MM/YYYY 1.0 Cria\u00e7\u00e3o do documento Bernardo Lobo, Bernardo Moreira, Guilherme Dias, Julia Curto e Michel de Melo 03/06/2025 1.1 Atualiza\u00e7\u00e3o completa do documento para refletir o projeto Simblissima Bernardo Lobo, Bernardo Moreira, Guilherme Dias, Julia Curto e Michel de Melo"},{"location":"iniciacao/entrevista/","title":"Entrevista","text":""},{"location":"iniciacao/entrevista/#introducao","title":"Introdu\u00e7\u00e3o","text":"<p> A t\u00e9cnica da entrevista trata-se de uma conversa guiada por um roteiro de perguntas ou t\u00f3picos, na qual visa questionar o stakeholders sobre o sistema atual e esclarecer as suas necessidades sobre o sistema que ser\u00e1 desenvolvido. A entrevista permite investiga\u00e7\u00e3o em profundidade sobre um problema, dessa forma coletar uma grande quantidade de informa\u00e7\u00f5es para o sistema. </p>"},{"location":"iniciacao/entrevista/#metodologia","title":"Metodologia","text":"<p> Para esta entrevista optamos por seguir um modelo de entrevista aberta, onde ter\u00e1 uma s\u00e9rie de perguntas de apoio pr\u00e9-definidas com finalidade do stakeholders expor informa\u00e7\u00f5es importantes para o sistema. As quest\u00f5es s\u00e3o formuladas e filtradas, de acordo com o interesse da equipe com o prop\u00f3sito de orientar o entrevistador durante a entrevista. O entrevistador e entrevistado tem liberdade para abordar qualquer assunto relacionado ao sistema durante a entrevista. </p>"},{"location":"iniciacao/entrevista/#roteiro","title":"Roteiro","text":"<ul> <li>Voc\u00ea j\u00e1 enfrentou dificuldades para receber produtos na Ilha Primeira?</li> <li>Como funcionava o processo de pedidos antes do sistema?</li> <li>Voc\u00ea j\u00e1 usou alguma aplica\u00e7\u00e3o de delivery ou e-commerce?</li> <li>Teve algum problema espec\u00edfico com entregas para a ilha?</li> <li>O que voc\u00ea acha de uma aplica\u00e7\u00e3o que facilite pedidos para a ilha?</li> <li>Para voc\u00ea qual seria o sistema ideal de gerenciamento de pedidos?</li> <li>Voc\u00ea gostaria de poder se cadastrar e acompanhar seus pedidos?</li> <li>Voc\u00ea gostaria que as informa\u00e7\u00f5es dos pedidos fossem transparentes?</li> </ul>"},{"location":"iniciacao/entrevista/#entrevistas","title":"Entrevistas","text":""},{"location":"iniciacao/entrevista/#versao-10","title":"Vers\u00e3o 1.0","text":"<p>NOTA: As entrevistas apresentadas a seguir s\u00e3o fict\u00edcias e foram elaboradas para fins acad\u00eamicos, baseadas nos requisitos e funcionalidades implementadas no sistema Simblissima.</p>"},{"location":"iniciacao/entrevista/#entrevista-1-morador-da-ilha-primeira","title":"Entrevista 1 - Morador da Ilha Primeira","text":"Nome Papel Guilherme Entrevistador Maria Santos Entrevistada - Moradora da Ilha Primeira Data Hor\u00e1rio de inicio Hor\u00e1rio de fim Descri\u00e7\u00e3o 15/03/2025 14:30 15:15 Entrevista realizada via videoconfer\u00eancia. Nome do participante Di\u00e1logo durante a entrevista Guilherme: Voc\u00ea j\u00e1 enfrentou dificuldades para receber produtos na Ilha Primeira? Maria: Sim, constantemente. \u00c9 muito dif\u00edcil conseguir produtos do continente aqui na ilha. \u00c0s vezes demora semanas para chegar algo simples. Guilherme: Como funcionava o processo de pedidos antes? Maria: Era tudo muito desorganizado. Eu tinha que ligar para v\u00e1rias pessoas, fazer listas no papel, e nunca sabia quando ia chegar ou quanto ia custar no final. Guilherme: Voc\u00ea j\u00e1 usou alguma aplica\u00e7\u00e3o de delivery ou e-commerce? Maria: Uso iFood e Mercado Livre, mas aqui na ilha n\u00e3o funciona. Seria \u00f3timo ter algo parecido para nossos pedidos. Guilherme: Teve algum problema espec\u00edfico com entregas? Maria: Muitos! J\u00e1 recebi produtos errados, valores diferentes do combinado, e \u00e0s vezes nem sabia se meu pedido estava sendo providenciado. Guilherme: O que voc\u00ea acha de uma aplica\u00e7\u00e3o que facilite pedidos para a ilha? Maria: Seria revolucion\u00e1rio! Poder fazer pedidos organizados, saber o status, o valor... seria perfeito. Guilherme: Para voc\u00ea qual seria o sistema ideal? Maria: Um sistema onde eu pudesse fazer meus pedidos, ver o pre\u00e7o, acompanhar se est\u00e1 sendo providenciado, e ter seguran\u00e7a de que vai chegar. Guilherme: Voc\u00ea gostaria de poder se cadastrar e acompanhar seus pedidos? Maria: Com certeza! Poder ter um hist\u00f3rico dos meus pedidos seria muito \u00fatil. Guilherme: Voc\u00ea gostaria que as informa\u00e7\u00f5es fossem transparentes? Maria: Sim, principalmente os valores. Quero saber quanto vou pagar antes de confirmar."},{"location":"iniciacao/entrevista/#entrevista-2-potencial-gerente-do-sistema","title":"Entrevista 2 - Potencial Gerente do Sistema","text":"Nome Papel Julia Entrevistadora Carlos Oliveira Entrevistado - Empreendedor local Data Hor\u00e1rio de inicio Hor\u00e1rio de fim Descri\u00e7\u00e3o 18/03/2025 10:00 10:45 Entrevista realizada presencialmente. Nome do participante Di\u00e1logo durante a entrevista Julia: Como voc\u00ea v\u00ea a possibilidade de gerenciar um sistema de pedidos para a ilha? Carlos: \u00c9 uma grande oportunidade de neg\u00f3cio. Poderia organizar melhor todo o processo e atender mais pessoas. Julia: Quais informa\u00e7\u00f5es voc\u00ea gostaria de ter sobre os pedidos? Carlos: Preciso saber quantos pedidos tenho, valores totais, status de cada um, e poder controlar todo o processo. Julia: Como voc\u00ea definiria pre\u00e7os e gerenciaria entregas? Carlos: Gostaria de poder calcular o valor final incluindo frete e taxas, e acompanhar cada etapa da entrega. Julia: Que tipo de relat\u00f3rio seria \u00fatil? Carlos: Estat\u00edsticas de vendas, tempo m\u00e9dio de entrega, pedidos pendentes... informa\u00e7\u00f5es para tomar decis\u00f5es. Julia: Como voc\u00ea comunicaria mudan\u00e7as nos pedidos aos clientes? Carlos: Um sistema que permita atualizar status e os clientes vejam em tempo real seria ideal."},{"location":"iniciacao/entrevista/#requisitos-elicitados","title":"Requisitos elicitados","text":"ID Descri\u00e7\u00e3o REQ01 O sistema deve permitir cadastro de usu\u00e1rios com CPF, nome, email, telefone e endere\u00e7o REQ02 O sistema deve permitir login usando CPF como nome de usu\u00e1rio REQ03 O sistema deve permitir cria\u00e7\u00e3o de pedidos com m\u00faltiplos itens REQ04 O sistema deve permitir definir descri\u00e7\u00e3o e pre\u00e7o para cada item do pedido REQ05 O sistema deve permitir adicionar observa\u00e7\u00f5es aos pedidos REQ06 O sistema deve permitir visualizar status dos pedidos em tempo real REQ07 O sistema deve permitir ao gerente definir valor final incluindo frete e taxas REQ08 O sistema deve permitir ao gerente atualizar status dos pedidos REQ09 O sistema deve fornecer dashboard com estat\u00edsticas para o gerente REQ10 O sistema deve permitir ao cliente confirmar ou recusar valores finais REQ11 O sistema deve manter hist\u00f3rico completo de status dos pedidos REQ12 O sistema deve permitir filtragem e ordena\u00e7\u00e3o de pedidos REQ13 O sistema deve ter interface responsiva e intuitiva REQ14 O sistema deve garantir transpar\u00eancia nos valores e prazos REQ15 O sistema deve permitir gerenciamento de perfil do usu\u00e1rio"},{"location":"iniciacao/entrevista/#conclusao","title":"Conclus\u00e3o","text":"<p> Atrav\u00e9s da aplica\u00e7\u00e3o da t\u00e9cnica de entrevista, foi poss\u00edvel elicitar requisitos importantes para o projeto Simblissima. As entrevistas fict\u00edcias apresentadas demonstram a necessidade real de um sistema de gerenciamento de pedidos para facilitar a log\u00edstica entre o continente e a Ilha Primeira. Os stakeholders entrevistados destacaram problemas como falta de organiza\u00e7\u00e3o, transpar\u00eancia nos valores e acompanhamento de status, que foram diretamente endere\u00e7ados no desenvolvimento do sistema. A t\u00e9cnica permitiu identificar tanto requisitos funcionais quanto n\u00e3o funcionais, contribuindo significativamente para a defini\u00e7\u00e3o do escopo e funcionalidades do projeto. </p>"},{"location":"iniciacao/entrevista/#referencias","title":"Refer\u00eancias","text":"<p>SOMMERVILLE, Ian. Engenharia de Software. 10. ed. S\u00e3o Paulo: Pearson, 2018.</p> <p>PRESSMAN, Roger S. Engenharia de Software: Uma Abordagem Profissional. 8. ed. Porto Alegre: AMGH, 2016.</p> <p>VAZQUEZ, Carlos Eduardo; SIM\u00d5ES, Guilherme Siqueira. Engenharia de Requisitos: Software Orientado ao Neg\u00f3cio. 1. ed. S\u00e3o Paulo: Brasport, 2016.</p>"},{"location":"iniciacao/entrevista/#autores","title":"Autor(es)","text":"Data Vers\u00e3o Descri\u00e7\u00e3o Autor(es) 15/03/2025 1.0 Cria\u00e7\u00e3o do documento Bernardo Lobo 18/03/2025 2.0 Adi\u00e7\u00e3o das entrevistas fict\u00edcias 1 e 2 Guilherme Dias e Julia Curto 20/03/2025 2.1 Adi\u00e7\u00e3o dos requisitos elicitados e conclus\u00e3o Michel de Melo 04/06/2025 3.0 Atualiza\u00e7\u00e3o completa com entrevistas fict\u00edcias detalhadas para o projeto Simblissima Bernardo Lobo, Bernardo Moreira, Guilherme Dias, Julia Curto e Michel de Melo"},{"location":"iniciacao/ideias/","title":"Ideias","text":""},{"location":"iniciacao/ideias/#introducao","title":"Introdu\u00e7\u00e3o","text":"<p>Esta \u00e9 uma p\u00e1gina que documenta as principais ideias levantadas pelo grupo durante o processo de brainstorming e a sequ\u00eancia l\u00f3gica que levou \u00e0 escolha da ideia final. Nosso objetivo \u00e9 apresentar de forma clara e organizada as etapas do desenvolvimento conceitual.</p>"},{"location":"iniciacao/ideias/#ideias-levantadas","title":"Ideias Levantadas","text":""},{"location":"iniciacao/ideias/#1-tirolesa","title":"1. Tirolesa","text":"<p>Descri\u00e7\u00e3o: Seria um ponto em terra e um ponto na ilha, sendo ligados por um cabo de a\u00e7o com um carrinho motorizado que faria as entregas. \u00c9 uma ideia plaus\u00edvel, uma vez que a dist\u00e2ncia entre os dois pontos \u00e9 pequena, e tal sistema n\u00e3o apresenta muita necessidade de infraestrutura.</p> <p>Pontos Positivos: - R\u00e1pido acesso aos itens entregues em terra, f\u00e1cil utiliza\u00e7\u00e3o, manuten\u00e7\u00e3o simples, investimento inicial \u00fanico.</p> <p>Desafios: - Autoriza\u00e7\u00e3o municipal para implementar o sistema.</p>"},{"location":"iniciacao/ideias/#2-drones","title":"2. Drones","text":"<p>Descri\u00e7\u00e3o: Seria utilizado um sistema de drones com redes controlados remotamente por um piloto. \u00c9 uma ideia com entrega espec\u00edfica para cada morador, entregando diretamente em cada resid\u00eancia.</p> <p>Pontos Positivos: - Rapidez de entrega, entrega direta ao morador.</p> <p>Desafios: - Manuten\u00e7\u00e3o alta, alta infraestrutura, capacita\u00e7\u00e3o de profissionais, dificuldade de entrega, podendo perder o produto.</p>"},{"location":"iniciacao/ideias/#3-integracao-com-barcos","title":"3. Integra\u00e7\u00e3o com barcos","text":"<p>Descri\u00e7\u00e3o: Utilizar\u00edamos um sistema paralelo com as barcas j\u00e1 existentes para facilitar as entregas na ilha. </p> <p>Pontos Positivos: - Facilidade de implementa\u00e7\u00e3o, uma vez que o sistema j\u00e1 existe. - Gama m\u00faltipla de pontos de acesso dentro da ilha e fora, tornando o acesso mais democratizado. </p> <p>Desafios: - Depend\u00eancia das barcas. - Infraestrutura nos pontos \u00e2ncoras.</p>"},{"location":"iniciacao/ideias/#escolha-da-ideia-final","title":"Escolha da Ideia Final","text":""},{"location":"iniciacao/ideias/#ideia-escolhida-integracao-com-barcos","title":"Ideia Escolhida: [Integra\u00e7\u00e3o com barcos]","text":"<p>Motiva\u00e7\u00e3o: Por j\u00e1 existir um sistema de transporte mar\u00edtimo anteriormente estabelecido, ser\u00e1 mais f\u00e1cil integrar nosso sistema de gerenciamento de pedidos. A cria\u00e7\u00e3o de m\u00faltiplos pontos de entrega seria o meio-termo entre a rapidez e a individualiza\u00e7\u00e3o da entrega, possibilitando uma atua\u00e7\u00e3o completa na ilha.</p> <p>Plano de Implementa\u00e7\u00e3o: - Cria\u00e7\u00e3o do sistema Simblissima com API REST para gerenciamento de pedidos. - Usar barcos de transporte mar\u00edtimo como meio de entrega f\u00edsica. - Interface web para clientes criarem pedidos e acompanharem o status. - Dashboard para gerentes gerenciarem a log\u00edstica e atualiza\u00e7\u00e3o de status.</p>"},{"location":"iniciacao/ideias/#conclusao","title":"Conclus\u00e3o","text":"<p>A escolha da ideia final reflete o consenso do grupo e a viabilidade do projeto. Este site ser\u00e1 atualizado conforme o progresso do desenvolvimento.</p>"},{"location":"iniciacao/mapa_mental/","title":"Mapas Mentais","text":""},{"location":"iniciacao/mapa_mental/#introducao","title":"Introdu\u00e7\u00e3o","text":"<p> Mapa mental consiste em criar resumos cheios de s\u00edmbolos, cores, setas e frases de efeito com o objetivo de organizar o conte\u00fado e facilitar associa\u00e7\u00f5es entre as informa\u00e7\u00f5es destacadas. Este documento apresenta o mapa mental do sistema Simblissima, que visa facilitar a log\u00edstica de entregas de produtos do continente para a Ilha Primeira, organizando visualmente os principais atores, funcionalidades e componentes do sistema. </p>"},{"location":"iniciacao/mapa_mental/#metodologia","title":"Metodologia","text":"<p> O mapa mental foi desenvolvido utilizando PlantUML com sintaxe de mindmap, organizando hierarquicamente as funcionalidades e responsabilidades do sistema Simblissima. A estrutura foi criada com base nos requisitos elicitados atrav\u00e9s das t\u00e9cnicas de brainstorming, entrevistas e an\u00e1lise do documento de vis\u00e3o, representando as tr\u00eas principais entidades do sistema: Cliente (Morador), Gerente (Staff) e Sistema. </p>"},{"location":"iniciacao/mapa_mental/#mapa-mental-sistema-simblissima","title":"Mapa Mental - Sistema Simblissima","text":""},{"location":"iniciacao/mapa_mental/#versao-10","title":"Vers\u00e3o 1.0","text":""},{"location":"iniciacao/mapa_mental/#estrutura-do-mapa-mental","title":"Estrutura do Mapa Mental","text":"<p> O mapa mental do sistema Simblissima foi organizado em tr\u00eas principais ramifica\u00e7\u00f5es, cada uma representando os diferentes atores e componentes do sistema: </p> <p>1. Cliente (Morador da Ilha Primeira) - Autentica\u00e7\u00e3o: Funcionalidades de cadastro, login e logout   - Realizar cadastro com CPF, nome, email, telefone e endere\u00e7o   - Login utilizando CPF como nome de usu\u00e1rio   - Sistema de logout seguro</p> <ul> <li>Gerenciamento de Pedidos: Funcionalidades principais do cliente</li> <li>Criar novos pedidos com m\u00faltiplos itens</li> <li>Definir descri\u00e7\u00e3o e pre\u00e7o para cada item</li> <li>Adicionar observa\u00e7\u00f5es e escolher forma de pagamento</li> <li>Visualizar pedidos com status em tempo real</li> <li>Ver detalhes completos incluindo hist\u00f3rico de status</li> <li> <p>Confirmar ou recusar valores finais propostos</p> </li> <li> <p>Gerenciamento de Perfil: Manuten\u00e7\u00e3o de dados pessoais</p> </li> <li>Visualizar informa\u00e7\u00f5es do perfil</li> <li>Atualizar dados pessoais (nome, email, telefone, endere\u00e7o)</li> <li>Alterar senha de acesso</li> </ul> <p>2. Gerente (Staff/Administrador) - Autentica\u00e7\u00e3o: Sistema de login administrativo   - Login e logout com permiss\u00f5es especiais</p> <ul> <li>Dashboard: Painel de controle gerencial</li> <li>Visualizar estat\u00edsticas (total de pedidos, valor arrecadado, tempo m\u00e9dio)</li> <li>Filtrar pedidos por status e ordenar por diferentes crit\u00e9rios</li> <li> <p>Monitorar pedidos pendentes</p> </li> <li> <p>Gerenciamento de Pedidos: Controle completo dos pedidos</p> </li> <li>Visualizar todos os pedidos do sistema</li> <li>Acessar detalhes completos (cliente, itens, hist\u00f3rico)</li> <li>Atualizar status (Pendente, Aguardando Pagamento, Confirmado, Em Tr\u00e2nsito, Entregue, Cancelado)</li> <li>Definir valores finais incluindo frete e taxas</li> <li>Adicionar coment\u00e1rios ao hist\u00f3rico</li> </ul> <p>3. Sistema (Componentes T\u00e9cnicos) - API REST: Interface de comunica\u00e7\u00e3o   - Endpoints de autentica\u00e7\u00e3o   - CRUD completo para pedidos e clientes   - Gerenciamento de hist\u00f3rico de status</p> <ul> <li>Seguran\u00e7a: Prote\u00e7\u00f5es e controles</li> <li>Autentica\u00e7\u00e3o por sess\u00e3o</li> <li>Controle de permiss\u00f5es baseado em roles</li> <li> <p>Prote\u00e7\u00e3o CSRF contra ataques</p> </li> <li> <p>Interface: Camada de apresenta\u00e7\u00e3o</p> </li> <li>Single Page Application (SPA)</li> <li>Interface responsiva para diferentes dispositivos</li> <li>Atualiza\u00e7\u00e3o de dados em tempo real</li> </ul>"},{"location":"iniciacao/mapa_mental/#arquivo-plantuml","title":"Arquivo PlantUML","text":"<p> O mapa mental foi implementado em PlantUML e pode ser encontrado no arquivo <code>mm.wsd</code> na pasta de inicia\u00e7\u00e3o. Para visualizar o mapa mental, utilize um renderizador PlantUML ou ferramentas compat\u00edveis. </p> <p></p>"},{"location":"iniciacao/mapa_mental/#conclusao","title":"Conclus\u00e3o","text":"<p> O mapa mental do sistema Simblissima oferece uma vis\u00e3o estruturada e hier\u00e1rquica de todas as funcionalidades e componentes do sistema de gerenciamento de pedidos para a Ilha Primeira. A organiza\u00e7\u00e3o visual facilita a compreens\u00e3o das responsabilidades de cada ator (Cliente e Gerente) e dos componentes t\u00e9cnicos do sistema.  A estrutura do mapa mental reflete fielmente os requisitos funcionais elicitados durante as fases de inicia\u00e7\u00e3o do projeto, servindo como uma ferramenta de refer\u00eancia r\u00e1pida para desenvolvedores, stakeholders e usu\u00e1rios finais. A utiliza\u00e7\u00e3o de cores diferenciadas para cada categoria (azul para usu\u00e1rios, amarelo para sistema, verde e laranja para funcionalidades) auxilia na identifica\u00e7\u00e3o visual dos diferentes aspectos do sistema.  Este mapa mental demonstra a completude funcional do sistema Simblissima, abrangendo desde funcionalidades b\u00e1sicas de autentica\u00e7\u00e3o at\u00e9 recursos avan\u00e7ados de gerenciamento de pedidos e dashboard administrativo. </p>"},{"location":"iniciacao/mapa_mental/#referencias","title":"Refer\u00eancias","text":"<p>PlantUML Mind Map. Dispon\u00edvel em: https://plantuml.com/mindmap-diagram. Acesso em: 04 jun. 2025.</p> <p>BUZAN, Tony. Mapas Mentais e sua Elabora\u00e7\u00e3o: um sistema definitivo de pensamento que transformar\u00e1 a sua vida. S\u00e3o Paulo: Cultrix, 2005.</p> <p>Mind Mapping: Scientific Research and Studies. Dispon\u00edvel em: https://www.mindmeister.com/blog/mind-map-uses/. Acesso em: 04 jun. 2025.</p>"},{"location":"iniciacao/mapa_mental/#versionamento","title":"Versionamento","text":"Data Vers\u00e3o Descri\u00e7\u00e3o Autor(es) 24/03/2025 1.0 Cria\u00e7\u00e3o do documento e mapa mental inicial Bernardo Lobo, Bernardo Moreira, Guilherme Dias, Julia Curto e Michel de Melo 04/06/2025 2.0 Atualiza\u00e7\u00e3o completa para refletir o mapa mental implementado em PlantUML (mm.wsd) do projeto Simblissima Bernardo Lobo, Bernardo Moreira, Guilherme Dias, Julia Curto e Michel de Melo"},{"location":"iniciacao/metodologia/","title":"Metodologia","text":""},{"location":"iniciacao/metodologia/#introducao","title":"Introdu\u00e7\u00e3o","text":"<p> A metodologia pode ser definida como a sistematiza\u00e7\u00e3o de m\u00e9todos e t\u00e9cnicas com o intuito de se alcan\u00e7ar um objetivo. Este documento aborda as metodologias, processos e pr\u00e1ticas efetivamente utilizadas no desenvolvimento do projeto Simblissima, um sistema de gerenciamento de pedidos e entregas para a Ilha Primeira, constru\u00eddo como uma API REST com interface Single Page Application (SPA). </p>"},{"location":"iniciacao/metodologia/#metodologia","title":"Metodologia","text":"<p> A equipe adotou uma abordagem h\u00edbrida que combina elementos de metodologias \u00e1geis com pr\u00e1ticas de desenvolvimento iterativo. O desenvolvimento foi estruturado em intera\u00e7\u00f5es bem definidas, com foco na entrega cont\u00ednua de valor e na adapta\u00e7\u00e3o \u00e0s necessidades do projeto. As pr\u00e1ticas utilizadas foram escolhidas com base na experi\u00eancia da equipe e nos requisitos espec\u00edficos do sistema Simblissima. </p>"},{"location":"iniciacao/metodologia/#metodologias-e-praticas-adotadas","title":"Metodologias e Pr\u00e1ticas Adotadas","text":""},{"location":"iniciacao/metodologia/#rup-rational-unified-process","title":"RUP (Rational Unified Process)","text":"<p> O RUP foi utilizado como base estrutural para organizar as fases do projeto, proporcionando uma abordagem disciplinada e iterativa. O projeto seguiu as fases de Inicia\u00e7\u00e3o, Elabora\u00e7\u00e3o, Constru\u00e7\u00e3o e Transi\u00e7\u00e3o, com documenta\u00e7\u00e3o t\u00e9cnica detalhada e artefatos bem definidos. </p>"},{"location":"iniciacao/metodologia/#desenvolvimento-iterativo","title":"Desenvolvimento Iterativo","text":"<p> O projeto foi desenvolvido atrav\u00e9s de itera\u00e7\u00f5es sucessivas, permitindo refinamento cont\u00ednuo dos requisitos e entrega incremental de funcionalidades. Cada itera\u00e7\u00e3o incluiu an\u00e1lise, design, implementa\u00e7\u00e3o e testes das funcionalidades propostas. </p>"},{"location":"iniciacao/metodologia/#kanban","title":"Kanban","text":"<p> Foi utilizado um sistema de gerenciamento visual das tarefas, organizando o trabalho em diferentes est\u00e1gios do desenvolvimento, desde o backlog at\u00e9 a conclus\u00e3o, facilitando o acompanhamento do progresso e a identifica\u00e7\u00e3o de gargalos. </p>"},{"location":"iniciacao/metodologia/#praticas-de-desenvolvimento","title":"Pr\u00e1ticas de Desenvolvimento","text":""},{"location":"iniciacao/metodologia/#versao-10","title":"Vers\u00e3o 1.0","text":""},{"location":"iniciacao/metodologia/#arquitetura-e-design","title":"Arquitetura e Design","text":""},{"location":"iniciacao/metodologia/#padrao-cliente-servidor","title":"Padr\u00e3o Cliente-Servidor","text":"<p> O sistema foi desenvolvido seguindo o padr\u00e3o Cliente-Servidor, onde o frontend (SPA) atua como cliente enviando requisi\u00e7\u00f5es HTTP para o backend (API Django REST Framework) que processa e retorna as respostas apropriadas. </p>"},{"location":"iniciacao/metodologia/#padrao-mvt-model-view-template","title":"Padr\u00e3o MVT (Model-View-Template)","text":"<p> Utilizando o framework Django, o backend segue o padr\u00e3o MVT onde os Models representam a estrutura de dados, as Views (ViewSets) cont\u00eam a l\u00f3gica de neg\u00f3cio e os Templates s\u00e3o substitu\u00eddos por serializers para comunica\u00e7\u00e3o com o frontend. </p>"},{"location":"iniciacao/metodologia/#programacao-orientada-a-objetos-poo","title":"Programa\u00e7\u00e3o Orientada a Objetos (POO)","text":"<p> O desenvolvimento utilizou amplamente os princ\u00edpios da POO, com cria\u00e7\u00e3o de classes modelando entidades do dom\u00ednio (Cliente, Pedido, ItemPedido, StatusPedido), heran\u00e7a de classes base do Django e Django REST Framework, e encapsulamento da l\u00f3gica de neg\u00f3cio em m\u00e9todos espec\u00edficos. </p>"},{"location":"iniciacao/metodologia/#tecnologias-e-ferramentas","title":"Tecnologias e Ferramentas","text":""},{"location":"iniciacao/metodologia/#backend","title":"Backend","text":"<ul> <li>Python: Linguagem principal do desenvolvimento backend</li> <li>Django: Framework web para desenvolvimento r\u00e1pido e eficiente</li> <li>Django REST Framework: Toolkit para constru\u00e7\u00e3o da API RESTful</li> <li>SQLite: Banco de dados utilizado para desenvolvimento e testes</li> </ul>"},{"location":"iniciacao/metodologia/#frontend","title":"Frontend","text":"<ul> <li>JavaScript: Linguagem para interatividade da SPA</li> <li>HTML5 e CSS3: Estrutura e estiliza\u00e7\u00e3o da interface</li> <li>Bootstrap: Framework CSS para design responsivo</li> </ul>"},{"location":"iniciacao/metodologia/#ferramentas-de-desenvolvimento","title":"Ferramentas de Desenvolvimento","text":"<ul> <li>Git/GitHub: Controle de vers\u00e3o e colabora\u00e7\u00e3o</li> <li>Visual Studio Code: Ambiente de desenvolvimento integrado</li> <li>Live Share: Colabora\u00e7\u00e3o em tempo real no c\u00f3digo</li> <li>Discord/WhatsApp: Comunica\u00e7\u00e3o da equipe</li> </ul>"},{"location":"iniciacao/metodologia/#praticas-de-qualidade","title":"Pr\u00e1ticas de Qualidade","text":""},{"location":"iniciacao/metodologia/#validacao-e-seguranca","title":"Valida\u00e7\u00e3o e Seguran\u00e7a","text":"<p> Implementa\u00e7\u00e3o de valida\u00e7\u00f5es rigorosas nos serializers (CPF com 11 d\u00edgitos, pre\u00e7os positivos, emails \u00fanicos), sistema de autentica\u00e7\u00e3o por sess\u00e3o, controle de permiss\u00f5es baseado em roles (IsOwnerOrStaff), e prote\u00e7\u00e3o CSRF para prevenir ataques cross-site request forgery. </p>"},{"location":"iniciacao/metodologia/#tratamento-de-erros","title":"Tratamento de Erros","text":"<p> Implementa\u00e7\u00e3o de respostas de erro padronizadas com c\u00f3digos HTTP apropriados, logs detalhados para debug e desenvolvimento, e mensagens informativas para melhor experi\u00eancia do usu\u00e1rio. </p>"},{"location":"iniciacao/metodologia/#transacoes-atomicas","title":"Transa\u00e7\u00f5es At\u00f4micas","text":"<p> Utiliza\u00e7\u00e3o de transaction.atomic() para garantir consist\u00eancia de dados em opera\u00e7\u00f5es complexas, como cria\u00e7\u00e3o de pedidos com status inicial e atualiza\u00e7\u00e3o de valores totais. </p>"},{"location":"iniciacao/metodologia/#organizacao-do-trabalho","title":"Organiza\u00e7\u00e3o do Trabalho","text":""},{"location":"iniciacao/metodologia/#quadro-kanban","title":"Quadro Kanban","text":"<p> O gerenciamento de tarefas foi organizado atrav\u00e9s de um quadro Kanban com as seguintes colunas: </p> <ul> <li>Lista de Tarefas: Cont\u00e9m todas as tarefas identificadas para o projeto</li> <li>Incremento: Cont\u00e9m as tarefas selecionadas para a itera\u00e7\u00e3o atual</li> <li>Em andamento: Cont\u00e9m as tarefas sendo desenvolvidas</li> <li>Revis\u00e3o: Cont\u00e9m as tarefas que precisam ser revisadas antes da conclus\u00e3o</li> <li>Conclu\u00eddo: Cont\u00e9m as tarefas finalizadas e validadas</li> </ul>"},{"location":"iniciacao/metodologia/#tecnicas-de-elicitacao-de-requisitos","title":"T\u00e9cnicas de Elicita\u00e7\u00e3o de Requisitos","text":"<p> Foram utilizadas diversas t\u00e9cnicas para levantamento de requisitos: </p> <ul> <li>Brainstorming: Sess\u00f5es colaborativas para gera\u00e7\u00e3o de ideias e funcionalidades</li> <li>5W2H: Estrutura\u00e7\u00e3o clara dos objetivos e escopo do projeto</li> <li>Entrevistas: Coleta de informa\u00e7\u00f5es detalhadas sobre necessidades dos usu\u00e1rios</li> <li>Prototipa\u00e7\u00e3o: Desenvolvimento de prot\u00f3tipos de alta fidelidade usando Figma</li> </ul>"},{"location":"iniciacao/metodologia/#processo-de-desenvolvimento","title":"Processo de Desenvolvimento","text":""},{"location":"iniciacao/metodologia/#fases-do-projeto","title":"Fases do Projeto","text":"<p> O desenvolvimento seguiu as fases do RUP adaptadas para o contexto acad\u00eamico: </p> <p>Inicia\u00e7\u00e3o: Defini\u00e7\u00e3o do problema, escopo e objetivos atrav\u00e9s de t\u00e9cnicas como brainstorming, 5W2H e documento de vis\u00e3o. Cria\u00e7\u00e3o dos mapas mentais e prototipa\u00e7\u00e3o inicial.</p> <p>Elabora\u00e7\u00e3o: Modelagem detalhada do sistema com diagramas de casos de uso, diagramas de classes e documento de arquitetura de software (DAS). Refinamento dos requisitos e defini\u00e7\u00e3o da arquitetura.</p> <p>Constru\u00e7\u00e3o: Implementa\u00e7\u00e3o efetiva do sistema com desenvolvimento da API REST, interface SPA, sistema de autentica\u00e7\u00e3o, CRUD de pedidos e dashboard administrativo.</p> <p>Transi\u00e7\u00e3o: Prepara\u00e7\u00e3o para implanta\u00e7\u00e3o, documenta\u00e7\u00e3o de instala\u00e7\u00e3o e procedimentos de deploy.</p>"},{"location":"iniciacao/metodologia/#retrospectivas-e-melhoria-continua","title":"Retrospectivas e Melhoria Cont\u00ednua","text":"<p> A equipe realizou reuni\u00f5es de retrospectiva ao final de cada itera\u00e7\u00e3o, identificando pontos positivos, negativos e oportunidades de melhoria. Isso incluiu: </p> <ul> <li>Avalia\u00e7\u00e3o da comunica\u00e7\u00e3o e colabora\u00e7\u00e3o da equipe</li> <li>Identifica\u00e7\u00e3o de dificuldades t\u00e9cnicas e solu\u00e7\u00f5es encontradas</li> <li>Ajustes no processo de desenvolvimento baseados no feedback</li> <li>Defini\u00e7\u00e3o de a\u00e7\u00f5es para melhorar a efici\u00eancia nas pr\u00f3ximas itera\u00e7\u00f5es</li> </ul>"},{"location":"iniciacao/metodologia/#documentacao","title":"Documenta\u00e7\u00e3o","text":""},{"location":"iniciacao/metodologia/#padroes-de-documentacao","title":"Padr\u00f5es de Documenta\u00e7\u00e3o","text":"<p> Foi estabelecido um template padr\u00e3o para todos os documentos do projeto, garantindo consist\u00eancia e facilidade de manuten\u00e7\u00e3o. A documenta\u00e7\u00e3o incluiu: </p> <ul> <li>Documentos de inicia\u00e7\u00e3o (vis\u00e3o, metodologia, requisitos)</li> <li>Modelagem t\u00e9cnica (casos de uso, classes, arquitetura)</li> <li>Documenta\u00e7\u00e3o de constru\u00e7\u00e3o e implementa\u00e7\u00e3o</li> <li>Guias de transi\u00e7\u00e3o e implanta\u00e7\u00e3o</li> </ul>"},{"location":"iniciacao/metodologia/#controle-de-versao-da-documentacao","title":"Controle de Vers\u00e3o da Documenta\u00e7\u00e3o","text":"<p> Todos os documentos mantiveram hist\u00f3rico de vers\u00f5es detalhado, incluindo data, vers\u00e3o, descri\u00e7\u00e3o das altera\u00e7\u00f5es e autores respons\u00e1veis, garantindo rastreabilidade das mudan\u00e7as ao longo do projeto. </p>"},{"location":"iniciacao/metodologia/#conclusao","title":"Conclus\u00e3o","text":"<p> O projeto Simblissima utilizou uma abordagem metodol\u00f3gica h\u00edbrida que combinou elementos do RUP com pr\u00e1ticas \u00e1geis, resultando em um processo de desenvolvimento eficiente e bem estruturado. A ado\u00e7\u00e3o de t\u00e9cnicas de elicita\u00e7\u00e3o de requisitos, desenvolvimento iterativo, padr\u00f5es arquiteturais bem definidos e pr\u00e1ticas de qualidade contribuiu para o sucesso do projeto.  A utiliza\u00e7\u00e3o de tecnologias modernas como Django REST Framework para o backend e SPA para o frontend, combinada com pr\u00e1ticas de seguran\u00e7a e valida\u00e7\u00e3o rigorosas, resultou em um sistema robusto e funcional. O processo de documenta\u00e7\u00e3o padronizado e o controle de vers\u00e3o garantiram a rastreabilidade e manutenibilidade do projeto.  As retrospectivas regulares e a comunica\u00e7\u00e3o efetiva da equipe atrav\u00e9s de ferramentas colaborativas foram fundamentais para o aprendizado cont\u00ednuo e a adapta\u00e7\u00e3o do processo \u00e0s necessidades espec\u00edficas do projeto acad\u00eamico. </p>"},{"location":"iniciacao/metodologia/#referencias","title":"Refer\u00eancias","text":"<p>[1] RATIONAL UNIFIED PROCESS (RUP). Dispon\u00edvel em: https://www.ibm.com/docs/en/rational-unified-process. Acesso em: 02 jun. 2025.</p> <p>[2] KANBAN. Dispon\u00edvel em: https://kanbanize.com/kanban-resources/getting-started/what-is-kanban. Acesso em: 02 jun. 2025.</p> <p>[3] DJANGO DOCUMENTATION. Dispon\u00edvel em: https://docs.djangoproject.com/. Acesso em: 02 jun. 2025.</p> <p>[4] DJANGO REST FRAMEWORK. Dispon\u00edvel em: https://www.django-rest-framework.org/. Acesso em: 02 jun. 2025.</p> <p>[5] SOMMERVILLE, I. Engenharia de Software. 9\u00aa ed. S\u00e3o Paulo: Pearson Prentice Hall, 2011.</p> <p>[6] PRESSMAN, R. S. Engenharia de Software: Uma Abordagem Profissional. 7\u00aa ed. Porto Alegre: AMGH, 2011.</p>"},{"location":"iniciacao/metodologia/#autores","title":"Autor(es)","text":"Data Vers\u00e3o Descri\u00e7\u00e3o Autor(es) 24/03/2025 1.0 Cria\u00e7\u00e3o do documento Bernardo Lobo, Bernardo Moreira, Guilherme Dias, Julia Curto e Michel de Melo 02/06/2025 2.0 Atualiza\u00e7\u00e3o completa para refletir as metodologias e pr\u00e1ticas efetivamente utilizadas no projeto Simblissima Bernardo Lobo, Bernardo Moreira, Guilherme Dias, Julia Curto e Michel de Melo"},{"location":"iniciacao/prototipo_alta_fidelidade/","title":"Prot\u00f3tipo","text":""},{"location":"iniciacao/prototipo_alta_fidelidade/#introducao","title":"Introdu\u00e7\u00e3o","text":"<p> A constru\u00e7\u00e3o do prot\u00f3tipo de alta fidelidade auxilia a equipe de desenvolvimento a encontrar um n\u00edvel de detalhes abrangentes, extrair funcionalidades, testar usabilidade, e tamb\u00e9m fornece uma base para o gerenciamento do projeto pois com o prot\u00f3tipo \u00e9 poss\u00edvel realizar estimativas de quanto tempo ser\u00e1 necess\u00e1rio desempenhar em cada funcionalidade. </p>"},{"location":"iniciacao/prototipo_alta_fidelidade/#metodologia","title":"Metodologia","text":"<p> Iniciamos o projeto atrav\u00e9s dos levantamentos iniciais da equipe, ap\u00f3s discuss\u00f5es a ferramenta Figma foi selecionada para produzir o prot\u00f3tipo de alta fidelidade com aux\u00edlio do Material Design Color Tool. </p>"},{"location":"iniciacao/prototipo_alta_fidelidade/#prototipo-de-alta-fidelidade","title":"Prot\u00f3tipo de alta fidelidade","text":""},{"location":"iniciacao/prototipo_alta_fidelidade/#versao-10","title":"Vers\u00e3o 1.0","text":""},{"location":"iniciacao/prototipo_alta_fidelidade/#tela-login","title":"Tela Login","text":""},{"location":"iniciacao/prototipo_alta_fidelidade/#tela-cadastro","title":"Tela Cadastro","text":""},{"location":"iniciacao/prototipo_alta_fidelidade/#tela-da-home-usuario","title":"Tela da Home usu\u00e1rio","text":""},{"location":"iniciacao/prototipo_alta_fidelidade/#tela-da-home-adm","title":"Tela da Home adm","text":""},{"location":"iniciacao/prototipo_alta_fidelidade/#tela-perfil","title":"Tela Perfil","text":""},{"location":"iniciacao/prototipo_alta_fidelidade/#tela-dashboard","title":"Tela Dashboard","text":""},{"location":"iniciacao/prototipo_alta_fidelidade/#tela-do-produto-no-dashboard","title":"Tela do produto no Dashboard","text":""},{"location":"iniciacao/prototipo_alta_fidelidade/#tela-novo-pedido","title":"Tela novo pedido","text":""},{"location":"iniciacao/prototipo_alta_fidelidade/#tela-meus-pedidos","title":"Tela meus pedidos","text":""},{"location":"iniciacao/prototipo_alta_fidelidade/#tela-django-admin","title":"Tela Django admin","text":""},{"location":"iniciacao/prototipo_alta_fidelidade/#tela-da-api","title":"Tela da api","text":"<p>link para o Prot\u00f3tipo</p>"},{"location":"iniciacao/prototipo_alta_fidelidade/#conclusao","title":"Conclus\u00e3o","text":"<p> A partir da elabora\u00e7\u00e3o do prot\u00f3tipo foi poss\u00edvel ter uma no\u00e7\u00e3o inicial da interface do usu\u00e1rio, definindo fluxo, paleta de cores, bot\u00f5es, app bars e diversas outras funcionalidades </p>"},{"location":"iniciacao/prototipo_alta_fidelidade/#referencias","title":"Refer\u00eancias","text":"<p>Ferramenta Figma. Dispon\u00edvel em https://www.figma.com</p>"},{"location":"iniciacao/prototipo_alta_fidelidade/#autores","title":"Autor(es)","text":"Data Vers\u00e3o Descri\u00e7\u00e3o Autor(es) 04/06/25 1.0 Cria\u00e7\u00e3o do documento Bernardo Lobo, Bernardo Moreira, Guilherme Dias, Julia Curto e Michel de Melo"},{"location":"interacao/interacao1/","title":"Intera\u00e7\u00e3o 1 (05/02/24 \u00e0 12/04/2024)","text":""},{"location":"interacao/interacao1/#planejamento-de-interacao","title":"Planejamento de Intera\u00e7\u00e3o","text":""},{"location":"interacao/interacao1/#presentes-na-reuniao-bernardo-lobo-bernardo-moreira-guilherme-dias-julia-curto-michel-de-melo","title":"Presentes na reuni\u00e3o: Bernardo Lobo, Bernardo Moreira, Guilherme Dias, Julia Curto, Michel de Melo","text":""},{"location":"interacao/interacao1/#lista-de-tarefas-da-interacao","title":"Lista de Tarefas da Intera\u00e7\u00e3o","text":"Tarefa Responsabilidade Decidir o nome do projeto. Todos Criar o reposit\u00f3rio nos padr\u00f5es (Organizar wiki). Matheus Criar issues no GitHub / ZenHub Renan Configura\u00e7\u00e3o do grupo do Telegram(configurar bot). Moacir Estudar e escolher as metodologias. Todos Documento de vis\u00e3o Guilherme Dias Batista Elaborar 5w2H Bernardo Lobo, Bernardo Moreira, Guilherme Dias, Julia Curto e Michel de Melo Mapas Mentais XXXXX Brainstorming Bernardo Lobo, Bernardo Moreira, Guilherme Dias, Julia Curto e Michel de Melo Entrevistas XXXXX Prototipa\u00e7\u00e3o de Alta Fidelidade Julia Curto"},{"location":"interacao/interacao1/#sprint-retrospectivereview-meeting","title":"Sprint Retrospective/Review Meeting","text":""},{"location":"interacao/interacao1/#presentes-na-reuniao-bernardo-lobo-bernardo-moreira-guilherme-dias-julia-curto-e-michel-de-melo","title":"Presentes na reuni\u00e3o: [Bernardo Lobo, Bernardo Moreira, Guilherme Dias, Julia Curto e Michel de Melo]","text":""},{"location":"interacao/interacao1/#dividas-da-interacao","title":"Dividas da Intera\u00e7\u00e3o","text":"<ul> <li>PlantUML</li> <li>[Liste as d\u00edvidas ou pend\u00eancias da intera\u00e7\u00e3o, ex: Refinar requisitos de seguran\u00e7a.]</li> <li>[Ex: Detalhar a comunica\u00e7\u00e3o com o \"ponto \u00e2ncora\".]</li> <li>[Ex: Iniciar a modelagem de dados mais aprofundada.]</li> </ul>"},{"location":"interacao/interacao1/#riscos-encontrados","title":"Riscos Encontrados","text":"<ul> <li>Nenhum: Plano de gerenciamento de riscos n\u00e3o implementado.</li> </ul>"},{"location":"interacao/interacao1/#pontos-positivos","title":"Pontos Positivos","text":"<ul> <li>[Liste os pontos positivos da intera\u00e7\u00e3o, ex: Boa comunica\u00e7\u00e3o interna da equipe.]</li> <li>[Ex: Engajamento na pesquisa inicial de solu\u00e7\u00f5es.]</li> <li>[Ex: Defini\u00e7\u00e3o clara da ideia central do projeto (\"Integra\u00e7\u00e3o com barcos\").]</li> <li>[Ex: Utiliza\u00e7\u00e3o eficaz de ferramentas colaborativas.] </li> </ul>"},{"location":"interacao/interacao1/#pontos-negativos","title":"Pontos Negativos","text":"<ul> <li>[Liste os pontos negativos da intera\u00e7\u00e3o, ex: Dificuldade em estimar o tempo de algumas tarefas.]</li> <li>[Ex: Falta de padroniza\u00e7\u00e3o inicial na documenta\u00e7\u00e3o.]</li> <li>[Ex: Pouca experi\u00eancia com as tecnologias escolhidas.]</li> <li>[Ex: Aus\u00eancia de um membro em reuni\u00f5es importantes.] </li> </ul>"},{"location":"interacao/interacao1/#o-que-podemos-melhorar","title":"O que podemos melhorar?","text":"<ul> <li>Ter mais foco nas reuni\u00f5es para evitar o desperd\u00edcio de tempo.</li> <li>A equipe deve ter mais autonomia em rela\u00e7\u00e3o \u00e0 falta de membros.</li> <li>Comprometimento com o time.</li> </ul>"},{"location":"interacao/interacao1/#ferramentas-utilizadas","title":"Ferramentas utilizadas","text":"<ul> <li>Reuni\u00e3o: Hangouts</li> <li>Colheita dos pontos: Mentimeter</li> <li>Outras ferramentas: Discord, WhatsApp, Visual Studio Code / Live Share.</li> </ul> <p>Hist\u00f3rico de Vers\u00e3o | Data | Vers\u00e3o | Descri\u00e7\u00e3o | Autor(es) | |---|---|---|---| | dd/mm/aa | 1.0 | Cria\u00e7\u00e3o do documento | Autores | | 02/06/2025 | 1.1 | Atualiza\u00e7\u00e3o dos links, preenchimento de se\u00e7\u00f5es de retrospectiva e inclus\u00e3o de ferramentas | Bernardo Lobo, Bernardo Moreira, Guilherme Dias, Julia Curto e Michel de Melo |</p>"},{"location":"modelagem/","title":"Modelagem","text":""},{"location":"modelagem/das/","title":"Documento de Arquitetura de Software (DAS)","text":""},{"location":"modelagem/das/#simblissima","title":"\"Simblissima\"","text":""},{"location":"modelagem/das/#introducao","title":"Introdu\u00e7\u00e3o","text":""},{"location":"modelagem/das/#proposta","title":"Proposta","text":"<p> Este documento apresenta uma vis\u00e3o geral da arquitetura do sistema Simblissima, utilizando diferentes vis\u00f5es arquiteturais para destacar diversos aspectos do sistema. \u00c9 utilizado para capturar as decis\u00f5es arquiteturais significativas que fizeram parte do desenvolvimento do sistema, com foco no gerenciamento de pedidos e entregas entre o continente e a Ilha Primeira. </p>"},{"location":"modelagem/das/#escopo","title":"Escopo","text":"<p> A aplica\u00e7\u00e3o \"Simblissima\" tem o objetivo de fornecer uma API REST para o gerenciamento eficiente de pedidos e entregas, visando facilitar a log\u00edstica de produtos do continente para a Ilha Primeira. Ela inclui funcionalidades para registro e gest\u00e3o de usu\u00e1rios (clientes e gerentes), cria\u00e7\u00e3o e acompanhamento de pedidos, e atualiza\u00e7\u00e3o de status e valores, tudo acess\u00edvel atrav\u00e9s de uma interface Single Page Application (SPA). </p>"},{"location":"modelagem/das/#definicoes-acronimos-e-abreviacoes","title":"Defini\u00e7\u00f5es, Acr\u00f4nimos e Abrevia\u00e7\u00f5es","text":"<ul> <li>MVT - Model-View-Template: Padr\u00e3o arquitetural utilizado pelo Django, onde Model representa a estrutura de dados, View lida com a l\u00f3gica de neg\u00f3cio e Template \u00e9 respons\u00e1vel pela apresenta\u00e7\u00e3o.</li> <li>SPA - Single Page Application: Aplica\u00e7\u00e3o web que carrega uma \u00fanica p\u00e1gina HTML e atualiza o conte\u00fado dinamicamente conforme a intera\u00e7\u00e3o do usu\u00e1rio.</li> <li>API - Application Programming Interface: Conjunto de regras e protocolos que permite a comunica\u00e7\u00e3o entre diferentes softwares.</li> <li>REST - Representational State Transfer: Estilo de arquitetura de software para sistemas distribu\u00eddos, comumente usado para APIs web.</li> <li>SIMBLISSIMA - Nome do Aplicativo</li> </ul>"},{"location":"modelagem/das/#visao-geral","title":"Vis\u00e3o Geral","text":"<p> O Documento de Arquitetura de Software (DAS) trata-se de uma vis\u00e3o geral de toda a arquitetura do sistema Simblissima, observando diferentes aspectos do mesmo. Neste documento ser\u00e3o abordadas as seguintes vis\u00f5es da aplica\u00e7\u00e3o Simblissima: </p> <ul> <li>Caso de Uso;</li> <li>L\u00f3gica;</li> <li>Implanta\u00e7\u00e3o;</li> <li>Implementa\u00e7\u00e3o;</li> <li>Dados;</li> </ul>"},{"location":"modelagem/das/#representacao-arquitetural","title":"Representa\u00e7\u00e3o Arquitetural","text":""},{"location":"modelagem/das/#cliente-servidor","title":"Cliente-Servidor","text":"<p> Cliente-Servidor \u00e9 um modelo de arquitetura onde um cliente (geralmente uma interface de usu\u00e1rio) envia requisi\u00e7\u00f5es a um servidor, que processa essas requisi\u00e7\u00f5es e envia as respostas de volta ao cliente. No Simblissima, o frontend (SPA) atua como cliente e o backend (API Django REST Framework) como servidor. </p> <p>Cliente (Frontend):</p> <ul> <li>View: Consiste nas interfaces HTML, CSS e JavaScript que rodam no navegador do usu\u00e1rio. Estas interfaces s\u00e3o respons\u00e1veis por renderizar os dados e capturar as intera\u00e7\u00f5es do usu\u00e1rio, enviando requisi\u00e7\u00f5es \u00e0 API. Os arquivos <code>base.html</code> e os scripts JS em <code>static/js/</code> s\u00e3o parte desta camada.</li> </ul> <p>Servidor (Backend):</p> <ul> <li> <p>Controller: Em Django REST Framework, os ViewSets e as fun\u00e7\u00f5es decoradas com <code>@api_view</code> em <code>simblissimaApp/views.py</code> atuam como controladores. Eles recebem as requisi\u00e7\u00f5es HTTP do cliente, orquestram a l\u00f3gica de neg\u00f3cio, interagem com os modelos e serializers, e retornam as respostas HTTP.</p> </li> <li> <p>Service (L\u00f3gica de Neg\u00f3cio): A l\u00f3gica de neg\u00f3cio, como a cria\u00e7\u00e3o de pedidos com status inicial, atualiza\u00e7\u00e3o de valores totais, e valida\u00e7\u00f5es espec\u00edficas, est\u00e1 implementada principalmente dentro dos m\u00e9todos dos ViewSets (<code>PedidoViewSet</code>, <code>ClienteViewSet</code>, etc.) em <code>simblissimaApp/views.py</code> e nos serializers (<code>PedidoSerializer</code>). As a\u00e7\u00f5es <code>@action</code> e <code>transaction.atomic()</code> s\u00e3o exemplos de encapsulamento de l\u00f3gica de servi\u00e7o.</p> </li> <li> <p>Model: Respons\u00e1vel pela persist\u00eancia e recupera\u00e7\u00e3o de dados. No Simblissima, os modelos definidos em <code>simblissimaApp/models.py</code> (<code>Cliente</code>, <code>Pedido</code>, <code>ItemPedido</code>, <code>StatusPedido</code>) mapeiam diretamente para as tabelas do banco de dados (SQLite por padr\u00e3o) e encapsulam a l\u00f3gica de neg\u00f3cios relacionada aos dados.</p> </li> </ul>"},{"location":"modelagem/das/#objetivos-de-arquitetura-e-restricoes","title":"Objetivos de Arquitetura e Restri\u00e7\u00f5es","text":""},{"location":"modelagem/das/#objetivos","title":"Objetivos","text":"<p> **Seguran\u00e7a:**    - Proteger dados de usu\u00e1rios e pedidos atrav\u00e9s de autentica\u00e7\u00e3o por sess\u00e3o e permiss\u00f5es baseadas em roles (cliente/staff) no Django REST Framework.    - Utilizar CSRF Token para prote\u00e7\u00e3o contra ataques cross-site request forgery. **Persist\u00eancia:**    - Garantir a persist\u00eancia dos dados de clientes, pedidos, itens de pedidos e hist\u00f3rico de status em um banco de dados SQLite. **Privacidade:**    - Controlar o acesso a dados sens\u00edveis de clientes e pedidos atrav\u00e9s das permiss\u00f5es de usu\u00e1rio (IsOwnerOrStaff) e autentica\u00e7\u00e3o de sess\u00e3o. **Desempenho:**    - Otimizar as requisi\u00e7\u00f5es \u00e0 API e o carregamento da SPA para uma experi\u00eancia fluida, com filtros e ordena\u00e7\u00e3o para pedidos e dashboards. **Reusabilidade:**    - Utilizar componentes reutiliz\u00e1veis no frontend (JavaScript modular) e serializers gen\u00e9ricos no Django REST Framework para facilitar a manuten\u00e7\u00e3o e expans\u00e3o. </p>"},{"location":"modelagem/das/#restricoes","title":"Restri\u00e7\u00f5es","text":"<p> **Tamanho da tela:** A interface da Single Page Application (SPA) \u00e9 responsiva e se adapta a diferentes tamanhos de tela (desktop e mobile), embora a experi\u00eancia ideal seja em telas maiores para o dashboard do gerente.  **Portabilidade:** A aplica\u00e7\u00e3o \u00e9 baseada em web e pode ser acessada de qualquer navegador moderno, sem a necessidade de instala\u00e7\u00e3o de software espec\u00edfico no lado do cliente.  |IE|Edge|Firefox|Chrome|Safari|Googlebot| |--|----|-------|------|------|---------| |11 |&gt;= 14|&gt;= 52|&gt;= 49|&gt;= 10|Sim|  **Servi\u00e7os:** A aplica\u00e7\u00e3o \u00e9 autocontida e n\u00e3o depende inicialmente de servi\u00e7os externos de terceiros (como APIs de pagamento ou de mapas em tempo real). Todas as funcionalidades de gerenciamento de pedidos s\u00e3o internas.  **Acesso a internet:** A aplica\u00e7\u00e3o requer conex\u00e3o com a internet para ser acessada, pois \u00e9 uma aplica\u00e7\u00e3o web. </p>"},{"location":"modelagem/das/#ferramentas-utilizadas","title":"Ferramentas Utilizadas","text":"<ul> <li>Python: Linguagem de programa\u00e7\u00e3o principal para o backend.</li> <li>Django: Framework web para o desenvolvimento r\u00e1pido e eficiente do backend.</li> <li>Django REST Framework: Toolkit para a constru\u00e7\u00e3o da API RESTful.</li> <li>SQLite: Banco de dados padr\u00e3o leve, utilizado para o desenvolvimento e persist\u00eancia de dados.</li> <li>HTML, CSS, JavaScript: Linguagens para o desenvolvimento da Single Page Application (SPA) no frontend.</li> <li>Bootstrap: Framework CSS para o design responsivo da interface.</li> <li>Git/GitHub: Sistema de controle de vers\u00e3o e plataforma para colabora\u00e7\u00e3o.</li> <li>Visual Studio Code: Ambiente de desenvolvimento integrado (IDE).</li> <li>Figma: Ferramenta para prototipagem de alta fidelidade.</li> </ul>"},{"location":"modelagem/das/#visao-de-caso-de-uso","title":"Vis\u00e3o de Caso de Uso","text":"<p> A vis\u00e3o de caso de uso descreve as intera\u00e7\u00f5es dos principais atores com o sistema Simblissima. O diagrama apresenta os casos de uso para o **Cliente** (morador da Ilha Primeira), que pode se registrar, fazer login, criar e acompanhar pedidos, e gerenciar seu perfil; e para o **Gerente** (equipe de log\u00edstica/administra\u00e7\u00e3o), que pode fazer login, gerenciar pedidos, atualizar status e visualizar o dashboard. </p> <p></p>"},{"location":"modelagem/das/#visao-logica","title":"Vis\u00e3o L\u00f3gica","text":"<p> A vis\u00e3o l\u00f3gica do sistema Simblissima \u00e9 organizada em m\u00f3dulos funcionais que se comunicam atrav\u00e9s da API REST. Os principais componentes l\u00f3gicos incluem: <ul> <li>**M\u00f3dulo de Autentica\u00e7\u00e3o e Autoriza\u00e7\u00e3o**: Gerencia o registro, login e logout de usu\u00e1rios (clientes e staff), al\u00e9m de controlar o acesso a recursos da API com base nas permiss\u00f5es de usu\u00e1rio.</li> <li>**M\u00f3dulo de Gerenciamento de Clientes**: Lida com a cria\u00e7\u00e3o e atualiza\u00e7\u00e3o dos dados de clientes, incluindo o v\u00ednculo com o modelo `User` do Django.</li> <li>**M\u00f3dulo de Gerenciamento de Pedidos**: Centraliza a cria\u00e7\u00e3o, recupera\u00e7\u00e3o, atualiza\u00e7\u00e3o e exclus\u00e3o de pedidos, incluindo a associa\u00e7\u00e3o de itens e o c\u00e1lculo do valor total.</li> <li>**M\u00f3dulo de Rastreamento de Status**: Gerencia o ciclo de vida do pedido atrav\u00e9s de diferentes status, registrando o hist\u00f3rico de mudan\u00e7as e coment\u00e1rios. Permite que gerentes atualizem o status e definam valores finais, e clientes acompanhem essas mudan\u00e7as.</li> <li>**M\u00f3dulo de Relat\u00f3rios/Dashboard**: Fornece funcionalidades para que a equipe de gest\u00e3o visualize estat\u00edsticas e listas de pedidos filtradas, auxiliando na tomada de decis\u00f5es.</li> </ul> </p>"},{"location":"modelagem/das/#visao-de-implantacao","title":"Vis\u00e3o de Implanta\u00e7\u00e3o","text":"<p> O sistema Simblissima ser\u00e1 implantado como uma aplica\u00e7\u00e3o web Django com as seguintes caracter\u00edsticas de implanta\u00e7\u00e3o: <ul> <li>**Servidor Web**: Aplica\u00e7\u00e3o Django servindo tanto a API REST quanto os arquivos est\u00e1ticos da SPA</li> <li>**Banco de Dados**: SQLite para desenvolvimento, podendo ser migrado para PostgreSQL ou MySQL em produ\u00e7\u00e3o</li> <li>**Frontend**: Single Page Application (SPA) servida como arquivos est\u00e1ticos</li> <li>**Acesso do Cliente**: Navegadores web acessando o sistema atrav\u00e9s de HTTP/HTTPS</li> </ul> </p>"},{"location":"modelagem/das/#visao-de-implementacao","title":"Vis\u00e3o de Implementa\u00e7\u00e3o","text":""},{"location":"modelagem/das/#visao-geral_1","title":"Vis\u00e3o Geral","text":"<p> A vis\u00e3o de implementa\u00e7\u00e3o do Simblissima detalha a estrutura do c\u00f3digo-fonte e os componentes principais. O projeto \u00e9 organizado em uma aplica\u00e7\u00e3o Django (`simblissimaApp`) que cont\u00e9m os modelos de dados, serializadores, views da API e a l\u00f3gica de neg\u00f3cio. O frontend \u00e9 uma Single Page Application (SPA) constru\u00edda com HTML, CSS e JavaScript, que interage com a API REST. </p>"},{"location":"modelagem/das/#principais-componentes","title":"Principais Componentes:","text":"<ul> <li>models.py: Define as entidades do sistema (Cliente, Pedido, ItemPedido, StatusPedido)</li> <li>serializers.py: Serializa\u00e7\u00e3o dos dados para a API REST</li> <li>views.py: ViewSets e endpoints da API</li> <li>static/js/: Scripts JavaScript da SPA</li> <li>templates/: Templates HTML base</li> <li>static/css/: Estilos CSS e Bootstrap</li> </ul>"},{"location":"modelagem/das/#visao-de-dados","title":"Vis\u00e3o de Dados","text":""},{"location":"modelagem/das/#modelo-entidade-relacionamento-mer","title":"Modelo Entidade Relacionamento (MER)","text":"<p> O Modelo Entidade Relacionamento (MER) do Simblissima descreve as entidades do sistema e como elas se relacionam para armazenar as informa\u00e7\u00f5es de clientes, pedidos e seus status. </p>"},{"location":"modelagem/das/#entidades-e-relacionamentos","title":"Entidades e Relacionamentos:","text":"<ul> <li>User: Representa o usu\u00e1rio do sistema (do Django Auth), contendo informa\u00e7\u00f5es b\u00e1sicas de autentica\u00e7\u00e3o como username (CPF), email, first_name e last_name.</li> <li>Cliente: Estende o <code>User</code> com informa\u00e7\u00f5es espec\u00edficas do cliente, como CPF (\u00fanico), endere\u00e7o e telefone. Possui um relacionamento <code>OneToOneField</code> com <code>User</code>.</li> <li>Pedido: Representa um pedido feito por um cliente. Cont\u00e9m informa\u00e7\u00f5es como cliente (<code>ForeignKey</code> para Cliente), data de cria\u00e7\u00e3o, status (Pendente, Confirmado, etc.), valor total (dos itens), valor final (definido pelo gerente), m\u00e9todo de pagamento e observa\u00e7\u00f5es.</li> <li>ItemPedido: Representa um item individual dentro de um pedido. Possui uma <code>ForeignKey</code> para <code>Pedido</code> e cont\u00e9m a descri\u00e7\u00e3o do item e seu pre\u00e7o.</li> <li>StatusPedido: Registra o hist\u00f3rico de status de um pedido. Possui uma <code>ForeignKey</code> para <code>Pedido</code> e registra o status, a data da mudan\u00e7a e um coment\u00e1rio.</li> </ul>"},{"location":"modelagem/das/#diagrama-entidade-relacionamento-der","title":"Diagrama Entidade Relacionamento (DER)","text":"<p> O Diagrama Entidade Relacionamento (DER) a seguir ilustra visualmente as entidades e os relacionamentos descritos no MER, mostrando a estrutura do banco de dados do Simblissima. </p>"},{"location":"modelagem/das/#relacionamentos-principais","title":"Relacionamentos principais:","text":"<ul> <li>User (1:1) Cliente: Cada cliente est\u00e1 associado a um usu\u00e1rio Django</li> <li>Cliente (1:N) Pedido: Um cliente pode ter m\u00faltiplos pedidos</li> <li>Pedido (1:N) ItemPedido: Um pedido pode conter m\u00faltiplos itens</li> <li>Pedido (1:N) StatusPedido: Um pedido mant\u00e9m hist\u00f3rico de status</li> </ul>"},{"location":"modelagem/das/#tamanho-e-desempenho","title":"Tamanho e Desempenho","text":"<p> O sistema Simblissima foi projetado para ser leve e eficiente, utilizando o Django REST Framework para otimiza\u00e7\u00e3o de requisi\u00e7\u00f5es e respostas da API. A pagina\u00e7\u00e3o (page_size: 10) est\u00e1 configurada para limitar o n\u00famero de itens retornados por requisi\u00e7\u00e3o, melhorando o desempenho para grandes volumes de dados. A atualiza\u00e7\u00e3o autom\u00e1tica das listas de pedidos (a cada 30 segundos para a lista geral e 15 segundos para detalhes) visa manter as informa\u00e7\u00f5es atualizadas para clientes e gerentes, sem sobrecarregar o servidor. O uso de SQLite em desenvolvimento oferece flexibilidade e facilidade de setup, podendo ser escalado para bancos de dados mais robustos em produ\u00e7\u00e3o. </p>"},{"location":"modelagem/das/#qualidade","title":"Qualidade","text":"<p> A qualidade do sistema Simblissima \u00e9 assegurada atrav\u00e9s de: <ul> <li>**Valida\u00e7\u00e3o de Dados**: Implementada nos serializers e modelos para garantir a integridade e consist\u00eancia dos dados de entrada (ex: CPF de 11 d\u00edgitos, pre\u00e7os positivos).</li> <li>**Tratamento de Erros**: Respostas de erro padronizadas da API com c\u00f3digos HTTP apropriados e mensagens informativas para o cliente.</li> <li>**Seguran\u00e7a**: Autentica\u00e7\u00e3o de sess\u00e3o e permiss\u00f5es (`IsOwnerOrStaff`) para garantir que apenas usu\u00e1rios autorizados acessem ou modifiquem recursos espec\u00edficos.</li> <li>**Usabilidade**: Design responsivo da SPA com Bootstrap e feedback visual para as a\u00e7\u00f5es do usu\u00e1rio (mensagens de sucesso/erro).</li> <li>**Consist\u00eancia de Dados**: Uso de transa\u00e7\u00f5es at\u00f4micas para garantir que opera\u00e7\u00f5es complexas (ex: cria\u00e7\u00e3o de pedido com status inicial) sejam conclu\u00eddas integralmente ou desfeitas.</li> </ul> </p>"},{"location":"modelagem/das/#referencias-bibliograficas","title":"Refer\u00eancias Bibliogr\u00e1ficas","text":"<p>Documento de Arquitetura de Software: Dispon\u00edvel em: https://www.devmedia.com.br/documento-de-arquitetura-de-software-das/37279. Acesso em: 02 de junho de 2025. https://www.reddit.com/r/NoStupidQuestions/comments/hgkc5g/whats_a_gender_neutral_alternative_to_dear/?tl=pt-br Padr\u00e3o Cliente-Servidor: Dispon\u00edvel em: https://www.alura.com.br/artigos/o-que-e-cliente-servidor. Acesso em: 02 de junho de 2025. https://www.reddit.com/r/NoStupidQuestions/comments/hgkc5g/whats_a_gender_neutral_alternative_to_dear/?tl=pt-br Django REST Framework: Dispon\u00edvel em: https://www.django-rest-framework.org/. Acesso em: 02 de junho de 2025. SQLite: Dispon\u00edvel em: https://www.sqlite.org/index.html. Acesso em: 02 de junho de 2025.</p>"},{"location":"modelagem/das/#historico-de-versao","title":"Hist\u00f3rico de Vers\u00e3o","text":"Data Vers\u00e3o Descri\u00e7\u00e3o Autor(es) 08/11/2020 1.0 Criada estrutura b\u00e1sica do documento xxx xxx, xxx xx, xxx xx, xxx xxx e xxx xxxx 02/06/2025 1.1 Atualiza\u00e7\u00e3o completa do documento para refletir o projeto Simblissima, incluindo todas as se\u00e7\u00f5es e imagens. Bernardo Lobo, Bernardo Moreira, Guilherme Dias, Julia Curto e Michel de Melo"},{"location":"transicao/transicao/","title":"Documento de Transi\u00e7\u00e3o","text":""},{"location":"transicao/transicao/#introducao","title":"Introdu\u00e7\u00e3o","text":"<p> Este documento detalha a fase de transi\u00e7\u00e3o do projeto Simbl\u00edssima, descrevendo os procedimentos necess\u00e1rios para a implanta\u00e7\u00e3o do sistema em ambiente de produ\u00e7\u00e3o. </p>"},{"location":"transicao/transicao/#metodologia","title":"Metodologia","text":"<p> A transi\u00e7\u00e3o do sistema seguir\u00e1 uma abordagem gradual, garantindo a correta implanta\u00e7\u00e3o e treinamento dos usu\u00e1rios finais. </p>"},{"location":"transicao/transicao/#desenvolvimento","title":"Desenvolvimento","text":""},{"location":"transicao/transicao/#versao-10","title":"Vers\u00e3o 1.0","text":""},{"location":"transicao/transicao/#1-procedimentos-de-implantacao","title":"1. Procedimentos de Implanta\u00e7\u00e3o","text":"<p> - Configura\u00e7\u00e3o do ambiente de produ\u00e7\u00e3o - Migra\u00e7\u00e3o do banco de dados - Deploy da aplica\u00e7\u00e3o - Testes de aceita\u00e7\u00e3o </p>"},{"location":"transicao/transicao/#2-treinamento","title":"2. Treinamento","text":"<p> - Capacita\u00e7\u00e3o dos usu\u00e1rios - Manual do sistema - Documenta\u00e7\u00e3o t\u00e9cnica - Suporte inicial </p>"},{"location":"transicao/transicao/#3-monitoramento","title":"3. Monitoramento","text":"<p> - Acompanhamento de performance - Registro de incidentes - Feedback dos usu\u00e1rios - Ajustes necess\u00e1rios </p>"},{"location":"transicao/transicao/#conclusao","title":"Conclus\u00e3o","text":"<p> A fase de transi\u00e7\u00e3o estabelece os procedimentos necess\u00e1rios para garantir uma implanta\u00e7\u00e3o bem-sucedida do sistema Simbl\u00edssima. </p>"},{"location":"transicao/transicao/#referencias","title":"Refer\u00eancias","text":"<p>SOMMERVILLE, I. Engenharia de Software. 9\u00aa ed. S\u00e3o Paulo: Pearson Prentice Hall, 2011.</p>"},{"location":"transicao/transicao/#autores","title":"Autor(es)","text":"Data Vers\u00e3o Descri\u00e7\u00e3o Autor(es) 04/06/2025 1.0 Cria\u00e7\u00e3o do documento de transi\u00e7\u00e3o Bernardo Lobo, Bernardo Moreira, Guilherme Dias, Julia Curto e Michel de Melo"},{"location":"util/doc_template/","title":"Template de Documento","text":""},{"location":"util/doc_template/#introducao","title":"Introdu\u00e7\u00e3o","text":"<p> Este documento serve como um template padr\u00e3o para a cria\u00e7\u00e3o de toda a documenta\u00e7\u00e3o do projeto Simbl\u00edssima. Ele fornece uma estrutura consistente que deve ser seguida para manter a organiza\u00e7\u00e3o e padroniza\u00e7\u00e3o dos documentos. </p>"},{"location":"util/doc_template/#metodologia","title":"Metodologia","text":"<p> O template foi desenvolvido considerando as principais se\u00e7\u00f5es necess\u00e1rias para documentar adequadamente os artefatos do projeto. A estrutura inclui:  - Introdu\u00e7\u00e3o: contextualiza\u00e7\u00e3o e objetivos - Metodologia: processo de desenvolvimento - Desenvolvimento: conte\u00fado principal dividido em vers\u00f5es - Conclus\u00e3o: resultados e benef\u00edcios - Refer\u00eancias: fontes consultadas - Hist\u00f3rico de vers\u00f5es: controle de altera\u00e7\u00f5es </p>"},{"location":"util/doc_template/#como-utilizar-o-template","title":"Como Utilizar o Template","text":""},{"location":"util/doc_template/#versao-10","title":"Vers\u00e3o 1.0","text":"<p> 1. Fa\u00e7a uma c\u00f3pia deste arquivo 2. Renomeie o arquivo de acordo com o documento que ser\u00e1 criado 3. Preencha o cabe\u00e7alho com id e t\u00edtulo apropriados 4. Desenvolva o conte\u00fado mantendo a estrutura de se\u00e7\u00f5es 5. Para cada altera\u00e7\u00e3o significativa, crie uma nova subse\u00e7\u00e3o de vers\u00e3o 6. Mantenha a tabela de hist\u00f3rico de vers\u00f5es atualizada 7. Sempre utilize a formata\u00e7\u00e3o em justify nos par\u00e1grafos 8. Adicione refer\u00eancias relevantes seguindo o formato indicado </p>"},{"location":"util/doc_template/#conclusao","title":"Conclus\u00e3o","text":"<p> A utiliza\u00e7\u00e3o deste template permite manter um padr\u00e3o consistente na documenta\u00e7\u00e3o do projeto, facilitando a leitura, manuten\u00e7\u00e3o e rastreabilidade das informa\u00e7\u00f5es. Al\u00e9m disso, fornece uma estrutura clara que ajuda os colaboradores a documentarem adequadamente seus artefatos. </p>"},{"location":"util/doc_template/#referencias","title":"Refer\u00eancias","text":"<p>SOMMERVILLE, I. Engenharia de Software. 9\u00aa ed. S\u00e3o Paulo: Pearson Prentice Hall, 2011.</p> <p>ISO/IEC/IEEE 12207:2017 - Systems and software engineering - Software life cycle processes</p>"},{"location":"util/doc_template/#autores","title":"Autor(es)","text":"Data Vers\u00e3o Descri\u00e7\u00e3o Autor(es) 04/06/2025 1.0 Cria\u00e7\u00e3o do template de documento Bernardo Lobo, Bernardo Moreira, Guilherme Dias, Julia Curto e Michel de Melo"}]}